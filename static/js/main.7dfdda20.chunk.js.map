{"version":3,"sources":["components/Pages/LoadingScreen/LoadingScreen.js","components/Button/Button.js","components/Header/Header.js","components/Footer/Footer.js","components/Pages/PastWork/WorkContainer/WorkContainer.js","components/Card/Card.js","components/Card/PopOut.js","components/Pages/About/AboutContent/AboutContent.js","components/Pages/PastWork/WorkList.js","components/Pages/Home/Home.js","components/Pages/About/AboutInfo.js","components/Pages/About/About.js","components/Pages/PastWork/PastWork.js","components/Pages/ContactMe/ContactMe.js","scrollToTop.js","App.js","reportWebVitals.js","index.js"],"names":["pathStyle","whitespace","stroke","strokewidth","paintorder","LoadingScreen","setTimeout","props","history","push","id","viewBox","xmlns","d","style","React","Component","withRouter","Button","type","className","linkTo","value","linePos","onClick","window","scroll","top","left","behavior","document","activeElement","blur","StylesProvider","injectFirst","href","target","disableFocusRipple","disableRipple","url","tabIndex","bgColor","fgColor","width","height","padding","margin","linkButtonEmpty","endIcon","linkButton","component","Link","to","network","navButtonEmpty","navButton","submitButton","headerButtonsList","Header","useState","isOpened","setOpened","clickThing","map","bButton","socialLinks","Footer","enterDir","onKeyPress","event","key","cx","cy","r","transform","lineHeight","whiteSpace","Work","Title","imgSrc","imgAlt","paragraph","buttonClassName","buttonLinkTo","buttonValue","buttonType","classes","src","alt","WorkContainer","animDirection","sideKey","triggerOnce","duration","direction","fraction","Card","dir","subTitle","animKey","useMediaQuery","Math","random","delay","par","PopOut","startSide","cards","cascade","damping","card","shift","threeCards","temp","defaultTextOnlyAboutContent","buttonAboutContent","defaultPictureAboutContent","includes","cardsAboutContent","forEach","length","indexOf","AboutContent","WorkList","arr","Home","floor","i","wl","AboutInfo","About","ai","PastWork","validator","require","nameErrorConst","emailErrorConst","messageErrorConst","ContactMe","state","name","nameError","email","emailError","message","messageError","defaultName","defaultEmail","defaultMessage","handleSubmit","bind","resetForm","this","validate","preventDefault","templateParams","from_name","from_email","to_name","message_html","emailjs","setState","nameField","focus","messageField","emailField","onSubmit","TextField","inputProps","fontSize","InputLabelProps","inputRef","label","fullWidth","autoComplete","onChange","e","error","helperText","onBlur","spellCheck","multiline","rows","ScrollToTop","pathname","useLocation","useEffect","App","basename","Fragment","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kUAIMA,EAAY,CACdC,WAAY,MACZC,OAAQ,qBACRC,YAAa,MACbC,WAAY,UAGVC,E,uKACF,WAAqB,IAAD,OAChBC,YAAW,WACP,EAAKC,MAAMC,QAAQC,KAAK,WACzB,Q,oBAEP,WACI,OAAO,qBAAKC,GAAG,cAAR,SACH,sBACAA,GAAI,cACJC,QAAQ,yBAAyBC,MAAM,6BAFvC,UAGI,sBAAMC,EAAE,gKAAgKC,MAAOd,IAC/K,sBAAMa,EAAE,wuBAAwuBC,MAAOd,IACvvB,sBAAMa,EAAE,wqDAAwqDC,MAAOd,IACvrD,sBAAMa,EAAE,4dAA4dC,MAAOd,IAC3e,sBAAMa,EAAE,ssCAAssCC,MAAOd,IACrtC,sBAAMa,EAAE,goDAAgoDC,MAAOd,IAC/oD,sBAAMa,EAAE,wfAAwfC,MAAOd,IACvgB,sBAAMa,EAAE,o4BAAo4BC,MAAOd,IACn5B,sBAAMa,EAAE,orCAAorCC,MAAOd,IACnsC,sBAAMa,EAAE,qsDAAqsDC,MAAOd,IACptD,sBAAMa,EAAE,gxDAAgxDC,MAAOd,IAC/xD,sBAAMa,EAAE,62BAA62BC,MAAOd,IAC53B,sBAAMa,EAAE,iwBAAiwBC,MAAOd,IAChxB,sBAAMa,EAAE,saAAsaC,MAAOd,IACrb,sBAAMa,EAAE,qIAAqIC,MAAOd,IACpJ,sBAAMa,EAAE,saAAsaC,MAAOd,IACrb,sBAAMa,EAAE,u5CAAu5CC,MAAOd,IACt6C,sBAAMa,EAAE,+qDAA+qDC,MAAOd,IAC9rD,sBAAMa,EAAE,iGAAiGC,MAAOd,IAChH,sBAAMa,EAAE,wKAAwKC,MAAOd,a,GA9B3Ke,IAAMC,WAoCnBC,cAAWZ,G,wCCuFXa,MA9Hf,YAQG,IARcC,EAQf,EAReA,KAAMC,EAQrB,EARqBA,UAAWC,EAQhC,EARgCA,OAAQC,EAQxC,EARwCA,MAAOC,EAQ/C,EAR+CA,QAQ/C,IARwDC,eAQxD,MARkE,WAChEC,OAAOC,OAAO,CACVC,IAAK,EACLC,KAAM,EACNC,SAAU,WAEdC,SAASC,cAAcC,QAEzB,EAOE,OALIZ,GADW,MAAXG,EACa,IAAMA,EAGN,YAEJ,SAATJ,EACc,KAAVG,EA2FZ,YAAuD,IAA7BF,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,OAAiB,EAATE,QACzC,OACI,cAACU,EAAA,EAAD,CAAgBC,aAAW,EAA3B,SACI,cAAC,IAAD,CACId,UAAWA,EACXI,QAAS,WACLM,SAASC,cAAcC,QAE3BG,KAAMd,EACNe,OAAO,SACPC,oBAAoB,EACpBC,eAAe,EARnB,SAUI,cAAC,aAAD,CAAYC,IAAKlB,EAAQmB,SAAS,KAAKC,QAAQ,cAAcC,QAAQ,mBAAmB5B,MAAO,CAAC6B,MAAM,kBAAmBC,OAAO,kBAAmBC,QAAQ,EAAGC,OAAO,2BAvGlKC,CAAgB,CAAC3B,YAAWC,SAAQE,YAoEvD,YAAyD,IAApCH,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,MAAgB,EAATC,QAC3C,OACI,cAACU,EAAA,EAAD,CAAgBC,aAAW,EAA3B,SACI,cAAC,IAAD,CACId,UAAWA,EACXI,QAAS,WACLM,SAASC,cAAcC,QAE3BG,KAAMd,EACNe,OAAO,SACPC,oBAAoB,EACpBC,eAAe,EACfU,QAAS,cAAC,aAAD,CAAYT,IAAKlB,EAAQmB,SAAS,KAAKC,QAAQ,cAAcC,QAAQ,mBAAmB5B,MAAO,CAAC6B,MAAM,sBAAuBC,OAAO,sBAAuBC,QAAQ,EAAGC,OAAO,2BAT1L,SAWI,qCACSxB,EADT,YA/EG2B,CAAW,CAAC7B,YAAWC,SAAQC,QAAOC,YAGnC,eAATJ,EACS,KAAVG,EA4CZ,YAA+D,IAAtCF,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,OAAiBG,GAAS,EAAlBD,QAAkB,EAATC,SACjD,OACI,cAACS,EAAA,EAAD,CAAgBC,aAAW,EAA3B,SACI,cAAC,IAAD,CACId,UAAWA,EACXI,QAASA,EACT0B,UAAWC,IACXC,GAAI/B,EACJgB,oBAAoB,EACpBC,eAAe,EANnB,SAQI,cAAC,aAAD,CAAYe,QAAQ,QAAQb,SAAS,KAAKC,QAAQ,cAAcC,QAAQ,mBAAmB5B,MAAO,CAAC6B,MAAM,kBAAmBC,OAAO,kBAAmBC,QAAQ,EAAGC,OAAO,2BAvDvJQ,CAAe,CAAClC,YAAWC,SAAQE,UAASC,YAyB7E,YAAiE,IAA7CJ,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,MAAgBE,GAAS,EAAlBD,QAAkB,EAATC,SACnD,OACI,cAACS,EAAA,EAAD,CAAgBC,aAAW,EAA3B,SACI,cAAC,IAAD,CACId,UAAWA,EACXI,QAASA,EACT0B,UAAWC,IACXC,GAAI/B,EACJgB,oBAAoB,EACpBC,eAAe,EANnB,SAQI,qCACShB,EADT,YAnCDiC,CAAU,CAACnC,YAAWC,SAAQC,QAAOC,UAASC,YAEvC,WAATL,EAKb,YAA4D,IAArCC,EAAoC,EAApCA,UAAWE,EAAyB,EAAzBA,MAAgBE,GAAS,EAAlBD,QAAkB,EAATC,SAC9C,OACI,cAACS,EAAA,EAAD,CAAgBC,aAAW,EAA3B,SACI,cAAC,IAAD,CACId,UAAWA,EACXiB,oBAAoB,EACpBC,eAAe,EACfd,QAASA,EAJb,SAMI,qCACSF,EADT,YAbDkC,CAAa,CAACpC,YAAWE,QAAOC,UAASC,iBAD/C,GC/BHiC,G,MAAoB,CACtB,CACItC,KAAM,aACNC,UAAW,sBACXC,OAAQ,QACRC,MAAO,QAEX,CACIH,KAAM,aACNC,UAAW,uBACXC,OAAQ,SACRC,MAAO,SAEX,CACIH,KAAM,aACNC,UAAW,sBACXC,OAAQ,aACRC,MAAO,aAGX,CACIH,KAAM,aACNC,UAAW,yBACXC,OAAQ,cACRC,MAAO,iBA0DAoC,MArDf,WACI,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAiBC,EAAjB,KAMMC,EAAa,WACfD,GAAU,GACVpC,OAAOC,OAAO,CACVC,IAAK,EACLC,KAAM,EACNC,SAAU,WAEdC,SAASC,cAAcC,QAG3B,OACI,iCACI,sBAAKZ,UAAU,OAAf,UACQ,cAAC,EAAD,CACID,KAAM,aACNC,UAAU,eACVC,OAAO,QACPC,MAAM,mBACNE,QAASsC,IAEjB,qBACI1C,UAAWwC,EAAW,6BAA6B,sBACnDpC,QA1BG,WACfqC,GAAWD,IAuBH,SAGI,sBAAKjB,MAAM,MAAMC,OAAO,MAAMjC,QAAQ,cAAtC,UACA,sBAAMS,UAAU,aAAaP,EAAE,2OAC/B,sBAAMO,UAAU,aAAaP,EAAE,iBAC/B,sBAAMO,UAAU,aAAaP,EAAE,gPAGnC,qBAAKO,UAAU,gBAAf,SACSqC,EAAkBM,KAAI,SAAAC,GAAO,OAC1B,cAAC,EAAD,CAEI7C,KAAM6C,EAAQ7C,KACdC,UAAW4C,EAAQ5C,UACnBC,OAAQ2C,EAAQ3C,OAChBC,MAAO0C,EAAQ1C,MACfE,QAASsC,GALJE,EAAQ5C,sBCpEvCpB,G,MAAY,CACdC,WAAY,QAGVgE,EAAc,CAChB,CACI9C,KAAM,OACNC,UAAW,oBACXC,OAAQ,8CACRE,QAAS,WAEb,CACIJ,KAAM,OACNC,UAAW,iBACXC,OAAQ,+BACRE,QAAS,cAGb,CACIJ,KAAM,OACNC,UAAW,mBACXC,OAAQ,+CACRE,QAAS,WAGb,CACIJ,KAAM,aACNC,UAAW,gBACXC,OAAQ,cACRE,QAAS,eAsDF2C,IClFXC,EDkFWD,EAlDf,WACI,OACI,mCACQ,sBAAK9C,UAAU,cAAf,UACI,qBAAKA,UAAU,gBAAgBoB,SAAS,IACpC4B,WAAY,SAACC,GACS,UAAdA,EAAMC,KACN7C,OAAOC,OAAO,CACVC,IAAK,EACLC,KAAM,EACNC,SAAU,YAKtBL,QAAS,WACTC,OAAOC,OAAO,CACVC,IAAK,EACLC,KAAM,EACNC,SAAU,YAflB,SAkBI,sBAAKlB,QAAQ,gCAAgCC,MAAM,6BAAnD,UACA,wBAAQ2D,GAAG,UAAUC,GAAG,UAAUC,EAAE,UAAUC,UAAU,2DACxD,sBAAM7D,EAAE,kKAAkKC,MAAOd,IACjL,sBAAMa,EAAE,sKAAsKC,MAAOd,IACrL,sBAAMa,EAAE,o+hBAAo+hBC,MAAO,CAAC6D,WAAY,YAAaC,WAAY,OAAQF,UAAU,2EAI9iiBT,EAAYF,KAAI,SAAAC,GAAO,OACpB,cAAC,EAAD,CAEI7C,KAAM6C,EAAQ7C,KACdC,UAAW4C,EAAQ5C,UACnBC,OAAQ2C,EAAQ3C,OAChBC,MAAM,GACNC,QAASyC,EAAQzC,SALZyC,EAAQ5C,iBASzB,sBAAKA,UAAU,aAAf,UACI,mBAAGA,UAAU,gBAAgBe,KAAK,8EAAlC,4BAEA,mBAAGf,UAAU,UAAUe,KAAK,gCAA5B,4B,cCtBpB,SAAS0C,EAAT,GAUI,IATAC,EASD,EATCA,MACAC,EAQD,EARCA,OACAC,EAOD,EAPCA,OACAC,EAMD,EANCA,UACAC,EAKD,EALCA,gBACAC,EAID,EAJCA,aACAC,EAGD,EAHCA,YACAC,EAED,EAFCA,WACAC,EACD,EADCA,QAEA,OAAQ,sBAAKlE,UAAWkE,EAAhB,UACJ,6BAAKR,IACL,sBAAK1D,UAAU,mBAAf,UACI,qBAAKmE,IAAKR,EAAQS,IAAKR,IACvB,sBAAK5D,UAAU,mBAAf,UACI,4BAAI6D,IACJ,cAAC,EAAD,CAAQ9D,KAAMkE,EAAYjE,UAAW8D,EAAiB7D,OAAQ8D,EAAc7D,MAAO8D,aAMpFK,IC7EXC,ED6EWD,EA3Ef,YAYI,IAXAtE,EAWD,EAXCA,KACAwE,EAUD,EAVCA,QACAb,EASD,EATCA,MACAC,EAQD,EARCA,OACAC,EAOD,EAPCA,OACAC,EAMD,EANCA,UACAC,EAKD,EALCA,gBACAC,EAID,EAJCA,aAID,IAHCE,kBAGD,MAHY,OAGZ,MAFCD,mBAED,MAFa,yBAEb,MADCE,eACD,MADU,oBACV,EAmBC,MAlBa,cAATnE,GACAmE,GAAW,kBACXD,EAAW,aACXD,EAAY,mBAGRO,EAAU,IAAM,GAChBL,GAAW,SACXnB,EAAS,UAETmB,GAAW,QACXnB,EAAS,QAEA,aAAThD,IACAmE,GAAW,YACXJ,GAAmB,YAIvB,cAAC,IAAD,CACIU,aAAW,EACXC,SAAU,KACVC,UAAW3B,EACX4B,SAAU,GAJd,SAMKlB,EAAK,CACFC,QACAC,SACAC,SACAC,YACAC,kBACAC,eACAC,cACAC,aACAC,e,eCqCDU,ICtFXC,EDsFWD,EApFf,YAA6F,IAA9E7E,EAA6E,EAA7EA,KAAM2D,EAAuE,EAAvEA,MAAOoB,EAAgE,EAAhEA,SAAUnB,EAAsD,EAAtDA,OAAQC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,UAAsC,IAA3BK,eAA2B,MAAjB,OAAiB,EAWxF,OAXwF,EAATa,QAC/ET,EAAgB,OAEZU,YAAc,mCAEVV,EADAW,KAAKC,SAAW,GACA,QAGA,QAGX,YAATnF,GACAmE,GAAW,WAEP,cAAC,IAAD,CACIM,aAAW,EACXC,SAAU,KACVU,MAAO,IACPT,UAAWJ,EACXK,SAAU,GALd,SAOI,sBAAK3E,UAAWkE,EAAhB,UACI,6BAAKR,IACL,6BAAKoB,IACL,qBAAKX,IAAKR,EAAQS,IAAKR,IACvB,8BACKC,EAAUlB,KAAI,SAACyC,GAAD,OACf,mBAAG1F,MAAO,CAAC8D,WAAW,YAAtB,SACK4B,eAQP,UAATrF,GACLmE,GAAW,SAEP,cAAC,IAAD,CACIM,aAAW,EACXC,SAAU,KACVU,MAAO,IACPT,UAAWJ,EACXK,SAAU,GALd,SAOI,sBAAK3E,UAAWkE,EAAhB,UACI,6BAAKR,IACL,6BAAKoB,IACD,8BACKjB,EAAUlB,KAAI,SAACyC,GAAD,OACf,mBAAG1F,MAAO,CAAC8D,WAAW,YAAtB,SACK4B,eASzB,cAAC,IAAD,CACIZ,aAAW,EACXC,SAAU,KACVU,MAAO,IACPT,UAAWJ,EACXK,SAAU,GALd,SAOI,sBAAK3E,UAAWkE,EAAhB,UACI,6BAAKR,IACL,6BAAKoB,IACD,8BACKjB,EAAUlB,KAAI,SAACyC,GAAD,OACf,mBAAG1F,MAAO,CAAC8D,WAAW,YAAtB,SACK4B,e,MCrCdC,ICtCXR,EAIAS,EDkCWD,EArCf,YAA6E,IAA5DE,EAA2D,EAA3DA,MAAOhB,EAAoD,EAApDA,QAAoD,IAA3CL,eAA2C,MAAnC,SAAmC,MAAzBoB,UAU/C,OATIf,EAAU,IAAM,GAChBL,GAAW,YACXW,EAAM,UAGNX,GAAW,WACXW,EAAM,QAEVX,GAAW,UAT6D,MAAb,YAAa,GAWpE,cAAC,IAAD,CACIM,aAAW,EACXC,SAAU,KACVe,SAAO,EACPC,QAAS,EACTf,UAAWG,EACXF,SAAU,GANd,SAQI,qBAAK3E,UAAWkE,EAAhB,SACKqB,EAAM5C,KAAI,SAAC+C,EAAMxC,GAAP,OACP,cAAC,EAAD,CAEInD,KAAM2F,EAAK3F,KACX2D,MAAOgC,EAAKhC,MACZoB,SAAUY,EAAKZ,SACfnB,OAAQ+B,EAAK/B,OACbC,OAAQ8B,EAAK9B,OACbC,UAAW6B,EAAK7B,UAChBkB,QAAS7B,GAPJA,WCtBzByC,G,MAAQ,GACRC,EAAa,GACbC,EAAO,GAuFX,SAASC,EAAT,GAAkE,IAA5BpC,EAA2B,EAA3BA,MAAOG,EAAoB,EAApBA,UAAWK,EAAS,EAATA,QACpD,OACI,sBAAKlE,UAAWkE,EAAhB,UACI,6BAAKR,IACL,8BACKG,EAAUlB,KAAI,SAACyC,GAAD,OACX,mBAAG1F,MAAO,CAAC8D,WAAW,YAAtB,SACK4B,YAQzB,SAASW,EAAT,GAUI,IATArC,EASD,EATCA,MACAC,EAQD,EARCA,OACAC,EAOD,EAPCA,OACAC,EAMD,EANCA,UACAC,EAKD,EALCA,gBACAC,EAID,EAJCA,aACAC,EAGD,EAHCA,YACAC,EAED,EAFCA,WACAC,EACD,EADCA,QAEA,OAAQ,sBAAKlE,UAAWkE,EAAhB,UACJ,6BAAKR,IACL,sBAAK1D,UAAU,mBAAf,UACI,qBAAKmE,IAAKR,EAAQS,IAAKR,IACvB,sBAAK5D,UAAU,mBAAf,UACI,8BACK6D,EAAUlB,KAAI,SAACyC,GAAD,OACf,mBAAG1F,MAAO,CAAC8D,WAAW,YAAtB,SACK4B,SAIT,cAAC,EAAD,CAAQrF,KAAMkE,EAAYjE,UAAW8D,EAAiB7D,OAAQ8D,EAAc7D,MAAO8D,aAMnG,SAASgC,EAAT,GAAiF,IAA5CtC,EAA2C,EAA3CA,MAAOG,EAAoC,EAApCA,UAAWF,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,OAAQM,EAAS,EAATA,QACnE,OAAIA,EAAQ+B,SAAS,QAEb,sBAAKjG,UAAWkE,EAAhB,UACI,6BAAKR,IACL,gCACI,qBAAKS,IAAKR,EAAQS,IAAKR,IACvB,4BAAIC,UAOZ,sBAAK7D,UAAWkE,EAAhB,UACI,6BAAKR,IACL,gCACI,4BAAIG,IACJ,qBAAKM,IAAKR,EAAQS,IAAKR,UAO3C,SAASsC,EAAT,GAA+D,IAAnCxC,EAAkC,EAAlCA,MAAOG,EAA2B,EAA3BA,UAAWK,EAAgB,EAAhBA,QAASqB,EAAO,EAAPA,MASnD,OARAK,EAAa,GACbL,EAAMY,SAAQ,SAACT,GACXG,EAAKxG,KAAKqG,GACW,IAAhBG,EAAKO,QAAkBb,EAAMc,QAAQX,KAAUH,EAAMa,OAAS,IAC/DR,EAAWvG,KAAKwG,GAChBA,EAAO,OAGG,kBAAdhC,EAEI,sBAAK7D,UAAWkE,EAAhB,UACI,6BAAKR,IACJkC,EAAWjD,KAAI,SAAC+C,EAAMxC,GAAP,OACZ,cAAC,EAAD,CAAQqC,MAAOG,EAAMnB,QAASrB,EAAMyC,EAAOL,UAAWA,UAMlE,sBAAKtF,UAAWkE,EAAhB,UACI,6BAAKR,IACD,8BACKG,EAAUlB,KAAI,SAACyC,EAAKlC,GAAN,OACf,mBAAaxD,MAAO,CAAC8D,WAAW,YAAhC,SACK4B,GADGlC,QAKZ,uBACA,uBACH0C,EAAWjD,KAAI,SAAC+C,EAAMxC,GAAP,OACZ,cAAC,EAAD,CAAkBqC,MAAOG,EAAMnB,QAASrB,EAAMyC,EAAOL,UAAWA,GAAnDpC,SAMdoD,MA/Lf,YAAgN,IAAD,IAAxLvG,YAAwL,MAAnL,OAAmL,MAA3KwE,eAA2K,MAAnK,EAAmK,MAAhKb,aAAgK,MAA1J,cAA0J,EAA3IC,EAA2I,EAA3IA,OAAQC,EAAmI,EAAnIA,OAAmI,IAA3HC,iBAA2H,MAAjH,gBAAiH,EAAhG0B,EAAgG,EAAhGA,MAAgG,IAAzFrB,eAAyF,MAAjF,uBAAiF,EAAzDJ,EAAyD,EAAzDA,gBAAiBC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,WAa9L,OAZIM,EAAU,IAAM,GAChBL,GAAW,QACXoB,EAAY,YACZT,EAAM,OACNc,EAAQ,IAGRzB,GAAW,SACXoB,EAAY,aACZT,EAAM,QACNc,EAAQ,GAEC,SAAT5F,EAEI,cAAC,IAAD,CACIyE,aAAW,EACXC,SAAU,KACVC,UAAWG,EACXF,SAAU,GAJd,SAMSmB,EAA4B,CAACpC,QAAOG,YAAWK,cAI9C,YAATnE,GACLmE,GAAW,WAEP,cAAC,IAAD,CACIM,aAAW,EACXC,SAAU,KACVC,UAAWG,EACXF,SAAU,GAJd,SAMSqB,EAA2B,CAACtC,QAAOG,YAAWF,SAAQC,SAAQM,eAI7D,WAATnE,GACLmE,EAAU,YACVW,EAAI,OAEA,cAAC,IAAD,CACIL,aAAW,EACXC,SAAU,KACVC,UAAWG,EACXF,SAAU,GAJd,SAMKoB,EAAmB,CAChBrC,QACAC,SACAC,SACAC,YACAC,kBACAC,eACAC,cACAC,aACAC,eAKE,SAATnE,GACLmE,GAAW,kBAEP,cAAC,IAAD,CACIM,aAAW,EACXC,SAAU,IACVC,UAAWG,EACXW,SAAO,EACPC,QAAS,EACTd,SAAU,IANd,SAQKuB,EAAkB,CACnBxC,QACAG,YACAK,UACAqB,kBAfP,GCYMgB,EAtFE,CACb,CACI7C,MAAM,YACNC,OAAO,+BACPC,OAAO,oBACPC,UAAU,icACVC,gBAAgB,kBAChBC,aAAa,uBAEjB,CACIL,MAAM,YACNC,OAAO,+BACPC,OAAO,oBACPC,UAAU,icACVC,gBAAgB,kBAChBC,aAAa,uBAEjB,CACIL,MAAM,YACNC,OAAO,+BACPC,OAAO,oBACPC,UAAU,icACVC,gBAAgB,kBAChBC,aAAa,uBAEjB,CACIL,MAAM,YACNC,OAAO,+BACPC,OAAO,oBACPC,UAAU,icACVC,gBAAgB,kBAChBC,aAAa,uBAEjB,CACIL,MAAM,YACNC,OAAO,+BACPC,OAAO,oBACPC,UAAU,icACVC,gBAAgB,kBAChBC,aAAa,uBAEjB,CACIL,MAAM,YACNC,OAAO,+BACPC,OAAO,oBACPC,UAAU,icACVC,gBAAgB,kBAChBC,aAAa,uBAEjB,CACIL,MAAM,YACNC,OAAO,+BACPC,OAAO,oBACPC,UAAU,icACVC,gBAAgB,kBAChBC,aAAa,uBAEjB,CACIL,MAAM,YACNC,OAAO,+BACPC,OAAO,oBACPC,UAAU,icACVC,gBAAgB,kBAChBC,aAAa,uBAEjB,CACIL,MAAM,YACNC,OAAO,+BACPC,OAAO,oBACPC,UAAU,icACVC,gBAAgB,kBAChBC,aAAa,uBAEjB,CACIL,MAAM,YACNC,OAAO,+BACPC,OAAO,oBACPC,UAAU,icACVC,gBAAgB,kBAChBC,aAAa,wBCvEjByC,G,OAAM,IAyDKC,E,kDAtDX,aAAc,IAAD,EAKT,IALS,oBACT,eAEAD,EAAI,GAEGA,EAAIJ,OAAS,GAAE,CAClB,IAAI/C,EAAI4B,KAAKyB,MAAMzB,KAAKC,SAAWqB,EAASH,SACpB,IAApBI,EAAIH,QAAQhD,IAAWmD,EAAInH,KAAKgE,GAGxC,IAAK,IAAIsD,EAAI,EAAGA,EAAIH,EAAIJ,OAAQO,IAC5BH,EAAIG,GAAKJ,EAASC,EAAIG,IAXjB,S,0CAcb,WACI,OACI,gCACI,cAAC,EAAD,IACI,sBAAK3G,UAAU,gBAAf,UACQ,cAAC,EAAD,CACID,KAAO,SACPwE,QAAQ,KACRb,MAAM,WACNC,OAAO,+BACPC,OAAO,mBACPC,UAAW,CAAC,iiBAAkiB,8VAA+V,qdAC74BC,gBAAgB,yBAChBC,aAAa,SACbE,WAAW,aACXD,YAAY,mBAEhB,sBAAKhE,UAAU,oBAAf,UACI,sDACKwG,EAAI7D,KAAI,SAACiE,EAAI1D,GAAL,OACL,cAAC,EAAD,CAEInD,KAAK,WACLwE,QAASrB,EACTQ,MAAOkD,EAAGlD,MACVC,OAAQiD,EAAGjD,OACXC,OAAQgD,EAAGhD,OACXC,UAAW+C,EAAG/C,UACdC,gBAAiB8C,EAAG9C,gBACpBC,aAAc6C,EAAG7C,cARZb,YAajC,cAAC,EAAD,W,GAjDGvD,IAAMC,WCyHViH,EAnIE,CACb,CACI9G,KAAK,OACL2D,MAAM,YACNC,OAAO,KACPC,OAAO,KACPC,UAAU,CAAC,wdAAyd,4bAExe,CACI9D,KAAK,OACL2D,MAAM,YACNG,UAAU,CAAC,0EAA2E,wYACtF0B,MAAM,CACF,CACIxF,KAAK,UACL2D,MAAM,+BACNoB,SAAS,6BACTnB,OAAO,2BACPC,OAAO,YACPC,UAAU,CAAC,KAEf,CACI9D,KAAK,UACL2D,MAAM,yBACNoB,SAAS,6BACTnB,OAAO,0BACPC,OAAO,WACPC,UAAU,CAAC,KAEf,CACI9D,KAAK,UACL2D,MAAM,eACNoB,SAAS,gCACTnB,OAAO,2BACPC,OAAO,oBACPC,UAAU,CAAC,KAEf,CACI9D,KAAK,QACL2D,MAAM,GACNoB,SAAS,GACTnB,OAAO,KACPC,OAAO,KACPC,UAAU,CAAC,KAEf,CACI9D,KAAK,UACL2D,MAAM,0BACNoB,SAAS,0BACTnB,OAAO,0BACPC,OAAO,WACPC,UAAU,CAAC,KAEf,CACI9D,KAAK,QACL2D,MAAM,GACNoB,SAAS,GACTnB,OAAO,KACPC,OAAO,KACPC,UAAU,CAAC,OAIvB,CACI9D,KAAK,OACL2D,MAAM,aACNG,UAAU,CAAC,kcACX0B,MAAM,CACF,CACIxF,KAAK,OACL2D,MAAM,gBACNoB,SAAS,yBACTnB,OAAO,KACPC,OAAO,KACPC,UAAU,CAAC,+JAAgK,gFAE/K,CACI9D,KAAK,OACL2D,MAAM,oCACNoB,SAAS,4BACTnB,OAAO,KACPC,OAAO,KACPC,UAAU,CAAC,mcAEf,CACI9D,KAAK,OACL2D,MAAM,oCACNoB,SAAS,4BACTnB,OAAO,KACPC,OAAO,KACPC,UAAU,CAAC,mcAEf,CACI9D,KAAK,OACL2D,MAAM,eACNC,OAAO,KACPC,OAAO,KACPC,UAAU,CAAC,mcAEf,CACI9D,KAAK,OACL2D,MAAM,eACNC,OAAO,KACPC,OAAO,KACPC,UAAU,CAAC,mcAEf,CACI9D,KAAK,OACL2D,MAAM,eACNC,OAAO,KACPC,OAAO,KACPC,UAAU,CAAC,mcAEf,CACI9D,KAAK,OACL2D,MAAM,eACNC,OAAO,KACPC,OAAO,KACPC,UAAU,CAAC,mcAEf,CACI9D,KAAK,OACL2D,MAAM,eACNC,OAAO,KACPC,OAAO,KACPC,UAAU,CAAC,scC7FZiD,G,mKAxBX,WACI,OACI,gCACI,cAAC,EAAD,IACI,qBAAK9G,UAAU,iBAAf,SACK6G,EAAUlE,KAAI,SAACoE,EAAI7D,GAAL,OACX,cAAC,EAAD,CAEInD,KAAMgH,EAAGhH,KACTwE,QAASrB,EACTQ,MAAOqD,EAAGrD,MACVC,OAAQoD,EAAGpD,OACXC,OAAQmD,EAAGnD,OACXC,UAAWkD,EAAGlD,UACd0B,MAAOwB,EAAGxB,OAPLrC,QAWrB,cAAC,EAAD,W,GAnBIvD,IAAMC,YC2BXoH,E,4JA3BX,WACI,OACI,gCACI,cAAC,EAAD,IACA,qBAAKhH,UAAU,WAAf,SACI,qBAAKA,UAAU,gBAAf,SACSuG,EAAS5D,KAAI,SAACiE,EAAI1D,GAAL,OACV,cAAC,EAAD,CAEInD,KAAK,WACLwE,QAASrB,EACTQ,MAAOkD,EAAGlD,MACVC,OAAQiD,EAAGjD,OACXC,OAAQgD,EAAGhD,OACXC,UAAW+C,EAAG/C,UACdC,gBAAiB8C,EAAG9C,gBACpBC,aAAc6C,EAAG7C,cARZb,UAazB,cAAC,EAAD,W,GAtBOvD,IAAMC,W,mCCEzBqH,GAAYC,EAAQ,KAClBC,GAAiB,8BACjBC,GAAkB,wBAClBC,GAAoB,yBA+KXC,G,kDA5KX,aAAc,IAAD,8BACT,gBACKC,MAAQ,CACTC,KAAM,KACNC,UAAW,GACXC,MAAM,sBACNC,WAAW,GACXC,QAAS,KACTC,aAAa,GACbC,YAAa,GACbC,aAAa,GACbC,eAAe,IAGnB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBAfR,E,gDAkBb,SAAajF,GAET,GADAvC,SAASC,cAAcC,OACC,KAAnBwH,KAAKb,MAAMC,MAAiC,OAAnBY,KAAKb,MAAMC,MACxCP,GAAUoB,SAASD,KAAKb,MAAMG,QAA+B,wBAApBU,KAAKb,MAAMG,OAC9B,KAAtBU,KAAKb,MAAMK,SAAuC,OAAtBQ,KAAKb,MAAMK,QAAiB,CACrD3E,EAAMqF,iBACN,MAAiCF,KAAKb,MAChCgB,EAAiB,CACrBC,UAFF,EAAQhB,KAGNiB,WAHF,EAAcf,MAIZgB,QAAS,mBACTC,aALF,EAAqBf,SAOrBgB,QACI,kBACA,mBACAL,EACA,8BAEJH,KAAKD,gBAGkB,OAAnBC,KAAKb,MAAMC,MACXY,KAAKS,SAAS,CACVrB,KAAK,GACLC,UAAUN,KAGQ,OAAtBiB,KAAKb,MAAMK,SACXQ,KAAKS,SAAS,CACVjB,QAAQ,GACRC,aAAaR,KAGI,wBAArBe,KAAKb,MAAMG,OACXU,KAAKS,SAAS,CACVnB,MAAM,GACNC,WAAWP,KAGI,KAAnBgB,KAAKb,MAAMC,MAAiC,OAAnBY,KAAKb,MAAMC,KACpCY,KAAKU,UAAUC,QAET9B,GAAUoB,SAASD,KAAKb,MAAMG,QAA8B,wBAApBU,KAAKb,MAAMG,MAG9B,KAAtBU,KAAKb,MAAMK,SAAuC,OAAtBQ,KAAKb,MAAMK,SAC5CQ,KAAKY,aAAaD,QAHlBX,KAAKa,WAAWF,U,uBAQ9B,WACEX,KAAKS,SAAS,CACVrB,KAAM,KACNC,UAAW,GACXC,MAAM,sBACNC,WAAW,GACXC,QAAS,KACTC,aAAa,GACbC,YAAa,GACbC,aAAa,GACbC,eAAe,O,oBAInB,WAAS,IAAD,OACJ,OACI,gCACI,cAAC,EAAD,IACA,qBAAKhI,UAAU,uBAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,oBAAIA,UAAU,gBAAd,yDACA,uBAAMkJ,SAAUd,KAAKH,aAArB,UACI,cAACkB,EAAA,EAAD,CACIC,WAAY,CAAC1J,MAAM,CAAC2J,SAAS,yBAC7BC,gBAAiB,CAAC5J,MAAM,CAAC2J,SAAS,yBAClCE,SAAU,SAAAT,GAAS,OAAK,EAAKA,UAAYA,GACzC5I,MAAOkI,KAAKb,MAAMO,YAClB0B,MAAM,YACNC,WAAS,EACTC,aAAa,OACbC,SAAU,SAACC,GACgB,KAAnBA,EAAE5I,OAAOd,MACT,EAAK2I,SAAS,CAACrB,KAAKoC,EAAE5I,OAAOd,MAAOuH,UAAUN,GAAgBW,YAAY8B,EAAE5I,OAAOd,QAGnF,EAAK2I,SAAS,CAACrB,KAAKoC,EAAE5I,OAAOd,MAAO4H,YAAY8B,EAAE5I,OAAOd,MAAOuH,UAAU,MAGlFoC,MAA2B,KAApBzB,KAAKb,MAAMC,KAClBsC,WAAY1B,KAAKb,MAAME,YAE/B,cAAC0B,EAAA,EAAD,CACIC,WAAY,CAAC1J,MAAM,CAAC2J,SAAS,yBAC7BC,gBAAiB,CAAC5J,MAAM,CAAC2J,SAAS,yBAClCE,SAAU,SAAAN,GAAU,OAAK,EAAKA,WAAaA,GAC3ClJ,KAAM,QACNG,MAAOkI,KAAKb,MAAMQ,aAClByB,MAAM,QACNC,WAAS,EACTC,aAAa,OACbC,SAAU,SAACC,GACP,EAAKf,SAAS,CAACd,aAAa6B,EAAE5I,OAAOd,SAEzC6J,OAAQ,SAACH,GACA3C,GAAUoB,SAASuB,EAAE5I,OAAOd,OAI7B,EAAK2I,SAAS,CAACnB,MAAMkC,EAAE5I,OAAOd,MAAO6H,aAAa6B,EAAE5I,OAAOd,MAAOyH,WAAW,KAH7E,EAAKkB,SAAS,CAACnB,MAAMkC,EAAE5I,OAAOd,MAAOyH,WAAWP,GAAiBW,aAAa6B,EAAE5I,OAAOd,SAM/F2J,OAAQ5C,GAAUoB,SAASD,KAAKb,MAAMG,OACtCoC,WAAY1B,KAAKb,MAAMI,aAE3B,cAACwB,EAAA,EAAD,CACIC,WAAY,CAAC1J,MAAM,CAAC2J,SAAS,uBAAwB9F,WAAW,yBAChE+F,gBAAiB,CAAC5J,MAAM,CAAC2J,SAAS,yBAClCE,SAAU,SAAAP,GAAY,OAAK,EAAKA,aAAeA,GAC/ChJ,UAAU,eACVE,MAAOkI,KAAKb,MAAMS,eAClBwB,MAAM,UACNQ,YAAU,EACVP,WAAS,EACTQ,WAAS,EACTC,KAAM,EACNR,aAAa,OACbC,SAAU,SAACC,GACgB,KAAnBA,EAAE5I,OAAOd,MACT,EAAK2I,SAAS,CAACjB,QAAQgC,EAAE5I,OAAOd,MAAO2H,aAAaR,GAAmBW,eAAe4B,EAAE5I,OAAOd,QAG/F,EAAK2I,SAAS,CAACjB,QAAQgC,EAAE5I,OAAOd,MAAO8H,eAAe4B,EAAE5I,OAAOd,MAAO2H,aAAa,MAG3FgC,MAA8B,KAAvBzB,KAAKb,MAAMK,QAClBkC,WAAY1B,KAAKb,MAAMM,eAE3B,cAAC,EAAD,CACI9H,KAAK,SACLC,UAAU,iBACVE,MAAM,SACNE,QAASgI,KAAKH,uBAK1B,cAAC,EAAD,W,GAvKQtI,IAAMC,WCVf,SAASuK,KACtB,IAAQC,EAAaC,cAAbD,SAMR,OAJAE,qBAAU,WACRjK,OAAOC,OAAO,EAAG,KAChB,CAAC8J,IAEG,K,ICqBMG,G,4JAlBX,WACI,OACI,eAAC,IAAD,CAAQC,SAAU,IAAlB,UACI,cAACL,GAAD,IACA,cAAC,IAAMM,SAAP,UACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAeC,KAAM,IAAIC,OAAK,EAAC7I,UAAW7C,IAC1C,cAAC,IAAD,CAAOyL,KAAM,QAAQC,OAAK,EAAC7I,UAAW2E,IACtC,cAAC,IAAD,CAAOiE,KAAM,SAASC,OAAK,EAAC7I,UAAWgF,IACvC,cAAC,IAAD,CAAO4D,KAAM,aAAaC,OAAK,EAAC7I,UAAWkF,IAC3C,cAAC,IAAD,CAAO0D,KAAM,cAAcC,OAAK,EAAC7I,UAAWwF,iB,GAXlD1H,aCAHgL,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF7K,SAAS8K,eAAe,SAM1BZ,M","file":"static/js/main.7dfdda20.chunk.js","sourcesContent":["import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport './LoadingScreen.css';\n\nconst pathStyle = {\n    whitespace: \"pre\",\n    stroke: \"rgb(255, 255, 255)\",\n    strokewidth: \"5px\",\n    paintorder: \"stroke\"\n}\n\nclass LoadingScreen extends React.Component{\n    componentDidMount() {\n        setTimeout(() => {\n            this.props.history.push('/Home')\n        }, 7500)\n    }\n    render() {\n        return <div id=\"loadingMain\">\n            <svg\n            id =\"loadingName\"\n            viewBox=\"556.958 0 1606.684 200\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M 610.668 116.931 L 610.668 128.311 L 556.958 91.881 L 556.958 82.951 L 610.668 46.521 L 610.668 57.891 L 567.328 87.121 L 567.328 87.701 L 610.668 116.931 Z\" style={pathStyle}/>\n                <path d=\"M 647.658 135.221 L 636.428 135.221 L 636.428 40.761 L 651.118 40.761 L 664.358 81.081 L 668.968 96.341 L 669.548 96.341 L 674.008 81.081 L 687.398 40.761 L 702.088 40.761 L 702.088 135.221 L 690.568 135.221 L 690.568 87.991 C 690.568 85.684 690.642 83.021 690.788 80.001 C 690.928 76.974 691.118 73.924 691.358 70.851 C 691.598 67.778 691.815 64.801 692.008 61.921 C 692.202 59.041 692.395 56.594 692.588 54.581 L 692.158 54.581 L 686.828 73.011 L 673.288 110.161 L 664.648 110.161 L 651.398 73.011 L 645.928 54.581 L 645.638 54.581 C 645.832 56.594 646.048 59.041 646.288 61.921 C 646.528 64.801 646.745 67.778 646.938 70.851 C 647.132 73.924 647.298 76.974 647.438 80.001 C 647.585 83.021 647.658 85.684 647.658 87.991 L 647.658 135.221 Z\" style={pathStyle}/>\n                <path d=\"M 747.858 136.951 C 744.598 136.951 741.528 136.494 738.648 135.581 C 735.768 134.668 733.248 133.371 731.088 131.691 C 728.928 130.011 727.225 127.948 725.978 125.501 C 724.725 123.054 724.098 120.248 724.098 117.081 C 724.098 113.141 725.035 109.708 726.908 106.781 C 728.782 103.854 731.758 101.334 735.838 99.221 C 739.918 97.108 745.175 95.381 751.608 94.041 C 758.042 92.694 765.768 91.638 774.788 90.871 C 774.695 88.471 774.312 86.214 773.638 84.101 C 772.965 81.988 771.908 80.141 770.468 78.561 C 769.028 76.974 767.132 75.701 764.778 74.741 C 762.432 73.781 759.578 73.301 756.218 73.301 C 751.605 73.301 747.188 74.188 742.968 75.961 C 738.742 77.741 734.998 79.638 731.738 81.651 L 727.128 73.591 C 728.855 72.438 730.895 71.261 733.248 70.061 C 735.602 68.861 738.098 67.781 740.738 66.821 C 743.378 65.861 746.185 65.068 749.158 64.441 C 752.132 63.821 755.155 63.511 758.228 63.511 C 767.828 63.511 774.958 66.128 779.618 71.361 C 784.272 76.588 786.598 83.571 786.598 92.311 L 786.598 135.221 L 776.948 135.221 L 775.938 125.721 L 775.508 125.721 C 771.575 128.788 767.232 131.428 762.478 133.641 C 757.725 135.848 752.852 136.951 747.858 136.951 Z M 751.028 127.441 C 755.062 127.441 759.022 126.554 762.908 124.781 C 766.795 123.008 770.755 120.441 774.788 117.081 L 774.788 98.641 C 767.302 99.221 761.038 100.038 755.998 101.091 C 750.958 102.151 746.925 103.424 743.898 104.911 C 740.878 106.398 738.745 108.078 737.498 109.951 C 736.245 111.824 735.618 113.911 735.618 116.211 C 735.618 118.231 736.052 119.934 736.918 121.321 C 737.785 122.714 738.912 123.868 740.298 124.781 C 741.692 125.694 743.325 126.368 745.198 126.801 C 747.072 127.228 749.015 127.441 751.028 127.441 Z\" style={pathStyle}/>\n                <path d=\"M 857.429 136.951 C 849.942 136.951 844.229 134.838 840.289 130.611 C 836.355 126.391 834.389 120.104 834.389 111.751 L 834.389 42.341 L 809.479 42.341 L 809.479 32.691 L 846.199 32.691 L 846.199 112.611 C 846.199 117.798 847.445 121.518 849.939 123.771 C 852.432 126.031 855.792 127.161 860.019 127.161 C 864.145 127.161 868.512 126.104 873.119 123.991 L 876.149 132.771 C 872.882 134.118 869.905 135.151 867.219 135.871 C 864.532 136.591 861.269 136.951 857.429 136.951 Z\" style={pathStyle}/>\n                <path d=\"M 935.019 136.951 C 929.552 136.951 924.489 136.134 919.829 134.501 C 915.176 132.868 911.119 130.491 907.659 127.371 C 904.206 124.251 901.519 120.411 899.599 115.851 C 897.679 111.291 896.719 106.131 896.719 100.371 C 896.719 94.518 897.752 89.311 899.819 84.751 C 901.879 80.191 904.686 76.328 908.239 73.161 C 911.792 69.988 915.946 67.588 920.699 65.961 C 925.446 64.328 930.459 63.511 935.739 63.511 C 941.499 63.511 946.469 64.518 950.649 66.531 C 954.822 68.551 958.349 70.951 961.229 73.731 L 955.329 81.361 C 952.449 78.868 949.449 76.901 946.329 75.461 C 943.209 74.021 939.826 73.301 936.179 73.301 C 932.146 73.301 928.449 73.948 925.089 75.241 C 921.729 76.541 918.872 78.391 916.519 80.791 C 914.166 83.191 912.319 86.048 910.979 89.361 C 909.632 92.668 908.959 96.338 908.959 100.371 C 908.959 104.404 909.606 108.054 910.899 111.321 C 912.199 114.581 914.026 117.388 916.379 119.741 C 918.726 122.094 921.556 123.918 924.869 125.211 C 928.182 126.511 931.856 127.161 935.889 127.161 C 940.209 127.161 944.169 126.321 947.769 124.641 C 951.369 122.961 954.609 120.871 957.489 118.371 L 962.819 126.001 C 958.879 129.461 954.559 132.151 949.859 134.071 C 945.152 135.991 940.206 136.951 935.019 136.951 Z\" style={pathStyle}/>\n                <path d=\"M 1014.779 136.951 C 1010.172 136.951 1005.779 136.134 1001.599 134.501 C 997.426 132.868 993.756 130.491 990.589 127.371 C 987.422 124.251 984.902 120.411 983.029 115.851 C 981.156 111.291 980.219 106.131 980.219 100.371 C 980.219 94.518 981.156 89.311 983.029 84.751 C 984.902 80.191 987.422 76.328 990.589 73.161 C 993.756 69.988 997.426 67.588 1001.599 65.961 C 1005.779 64.328 1010.172 63.511 1014.779 63.511 C 1019.386 63.511 1023.779 64.328 1027.959 65.961 C 1032.132 67.588 1035.802 69.988 1038.969 73.161 C 1042.136 76.328 1044.656 80.191 1046.529 84.751 C 1048.402 89.311 1049.339 94.518 1049.339 100.371 C 1049.339 106.131 1048.402 111.291 1046.529 115.851 C 1044.656 120.411 1042.136 124.251 1038.969 127.371 C 1035.802 130.491 1032.132 132.868 1027.959 134.501 C 1023.779 136.134 1019.386 136.951 1014.779 136.951 Z M 1014.779 127.161 C 1018.139 127.161 1021.186 126.511 1023.919 125.211 C 1026.659 123.918 1029.012 122.094 1030.979 119.741 C 1032.946 117.388 1034.459 114.581 1035.519 111.321 C 1036.572 108.054 1037.099 104.404 1037.099 100.371 C 1037.099 96.338 1036.572 92.668 1035.519 89.361 C 1034.459 86.048 1032.946 83.191 1030.979 80.791 C 1029.012 78.391 1026.659 76.541 1023.919 75.241 C 1021.186 73.948 1018.139 73.301 1014.779 73.301 C 1011.419 73.301 1008.372 73.948 1005.639 75.241 C 1002.899 76.541 1000.546 78.391 998.579 80.791 C 996.612 83.191 995.099 86.048 994.039 89.361 C 992.986 92.668 992.459 96.338 992.459 100.371 C 992.459 104.404 992.986 108.054 994.039 111.321 C 995.099 114.581 996.612 117.388 998.579 119.741 C 1000.546 122.094 1002.899 123.918 1005.639 125.211 C 1008.372 126.511 1011.419 127.161 1014.779 127.161 Z\" style={pathStyle}/>\n                <path d=\"M 1116.569 136.951 C 1109.083 136.951 1103.369 134.838 1099.429 130.611 C 1095.496 126.391 1093.529 120.104 1093.529 111.751 L 1093.529 42.341 L 1068.619 42.341 L 1068.619 32.691 L 1105.339 32.691 L 1105.339 112.611 C 1105.339 117.798 1106.586 121.518 1109.079 123.771 C 1111.573 126.031 1114.933 127.161 1119.159 127.161 C 1123.286 127.161 1127.653 126.104 1132.259 123.991 L 1135.289 132.771 C 1132.023 134.118 1129.046 135.151 1126.359 135.871 C 1123.673 136.591 1120.409 136.951 1116.569 136.951 Z\" style={pathStyle}/>\n                <path d=\"M 1164.5 135.221 L 1152.69 135.221 L 1152.69 65.241 L 1162.2 65.241 L 1163.2 74.451 L 1163.49 74.451 C 1165.316 71.191 1167.43 68.551 1169.83 66.531 C 1172.23 64.518 1175.446 63.511 1179.48 63.511 C 1186.293 63.511 1190.706 67.541 1192.72 75.601 C 1194.74 71.861 1196.973 68.911 1199.42 66.751 C 1201.866 64.591 1205.106 63.511 1209.14 63.511 C 1214.033 63.511 1217.85 65.358 1220.59 69.051 C 1223.323 72.751 1224.69 78.104 1224.69 85.111 L 1224.69 135.221 L 1212.88 135.221 L 1212.88 85.971 C 1212.88 77.811 1210.386 73.731 1205.4 73.731 C 1202.9 73.731 1200.883 74.621 1199.35 76.401 C 1197.81 78.174 1196.08 80.884 1194.16 84.531 L 1194.16 135.221 L 1183.22 135.221 L 1183.22 85.971 C 1183.22 81.938 1182.666 78.891 1181.56 76.831 C 1180.46 74.764 1178.613 73.731 1176.02 73.731 C 1173.526 73.731 1171.413 74.621 1169.68 76.401 C 1167.953 78.174 1166.226 80.884 1164.5 84.531 L 1164.5 135.221 Z\" style={pathStyle}/>\n                <path d=\"M 1360.3 135.221 L 1331.36 135.221 L 1331.36 40.761 L 1358.14 40.761 C 1362.94 40.761 1367.333 41.191 1371.32 42.051 C 1375.3 42.918 1378.707 44.261 1381.54 46.081 C 1384.373 47.908 1386.58 50.284 1388.16 53.211 C 1389.747 56.138 1390.54 59.668 1390.54 63.801 C 1390.54 68.501 1389.197 72.748 1386.51 76.541 C 1383.823 80.334 1379.647 82.951 1373.98 84.391 L 1373.98 84.961 C 1380.893 86.021 1386.27 88.421 1390.11 92.161 C 1393.95 95.908 1395.87 101.044 1395.87 107.571 C 1395.87 112.178 1395.007 116.211 1393.28 119.671 C 1391.547 123.124 1389.12 126.004 1386 128.311 C 1382.88 130.611 1379.137 132.338 1374.77 133.491 C 1370.403 134.644 1365.58 135.221 1360.3 135.221 Z M 1343.31 50.841 L 1343.31 80.501 L 1356.12 80.501 C 1364.187 80.501 1369.973 79.204 1373.48 76.611 C 1376.98 74.018 1378.73 70.081 1378.73 64.801 C 1378.73 59.621 1376.883 55.998 1373.19 53.931 C 1369.49 51.871 1363.993 50.841 1356.7 50.841 L 1343.31 50.841 Z M 1343.31 90.581 L 1343.31 125.141 L 1358.57 125.141 C 1366.73 125.141 1373.02 123.724 1377.44 120.891 C 1381.853 118.058 1384.06 113.428 1384.06 107.001 C 1384.06 101.141 1381.9 96.941 1377.58 94.401 C 1373.26 91.854 1366.923 90.581 1358.57 90.581 L 1343.31 90.581 Z\" style={pathStyle}/>\n                <path d=\"M 1438.9 136.951 C 1435.64 136.951 1432.57 136.494 1429.69 135.581 C 1426.81 134.668 1424.29 133.371 1422.13 131.691 C 1419.97 130.011 1418.267 127.948 1417.02 125.501 C 1415.767 123.054 1415.14 120.248 1415.14 117.081 C 1415.14 113.141 1416.077 109.708 1417.95 106.781 C 1419.824 103.854 1422.8 101.334 1426.88 99.221 C 1430.96 97.108 1436.217 95.381 1442.65 94.041 C 1449.084 92.694 1456.81 91.638 1465.83 90.871 C 1465.737 88.471 1465.354 86.214 1464.68 84.101 C 1464.007 81.988 1462.95 80.141 1461.51 78.561 C 1460.07 76.974 1458.174 75.701 1455.82 74.741 C 1453.474 73.781 1450.62 73.301 1447.26 73.301 C 1442.647 73.301 1438.23 74.188 1434.01 75.961 C 1429.784 77.741 1426.04 79.638 1422.78 81.651 L 1418.17 73.591 C 1419.897 72.438 1421.937 71.261 1424.29 70.061 C 1426.644 68.861 1429.14 67.781 1431.78 66.821 C 1434.42 65.861 1437.227 65.068 1440.2 64.441 C 1443.174 63.821 1446.197 63.511 1449.27 63.511 C 1458.87 63.511 1466 66.128 1470.66 71.361 C 1475.314 76.588 1477.64 83.571 1477.64 92.311 L 1477.64 135.221 L 1467.99 135.221 L 1466.98 125.721 L 1466.55 125.721 C 1462.617 128.788 1458.274 131.428 1453.52 133.641 C 1448.767 135.848 1443.894 136.951 1438.9 136.951 Z M 1442.07 127.441 C 1446.104 127.441 1450.064 126.554 1453.95 124.781 C 1457.837 123.008 1461.797 120.441 1465.83 117.081 L 1465.83 98.641 C 1458.344 99.221 1452.08 100.038 1447.04 101.091 C 1442 102.151 1437.967 103.424 1434.94 104.911 C 1431.92 106.398 1429.787 108.078 1428.54 109.951 C 1427.287 111.824 1426.66 113.911 1426.66 116.211 C 1426.66 118.231 1427.094 119.934 1427.96 121.321 C 1428.827 122.714 1429.954 123.868 1431.34 124.781 C 1432.734 125.694 1434.367 126.368 1436.24 126.801 C 1438.114 127.228 1440.057 127.441 1442.07 127.441 Z\" style={pathStyle}/>\n                <path d=\"M 1525.281 136.951 C 1522.021 136.951 1518.951 136.494 1516.071 135.581 C 1513.191 134.668 1510.671 133.371 1508.511 131.691 C 1506.351 130.011 1504.647 127.948 1503.401 125.501 C 1502.147 123.054 1501.521 120.248 1501.521 117.081 C 1501.521 113.141 1502.457 109.708 1504.331 106.781 C 1506.204 103.854 1509.181 101.334 1513.261 99.221 C 1517.341 97.108 1522.597 95.381 1529.031 94.041 C 1535.464 92.694 1543.191 91.638 1552.211 90.871 C 1552.117 88.471 1551.734 86.214 1551.061 84.101 C 1550.387 81.988 1549.331 80.141 1547.891 78.561 C 1546.451 76.974 1544.554 75.701 1542.201 74.741 C 1539.854 73.781 1537.001 73.301 1533.641 73.301 C 1529.027 73.301 1524.611 74.188 1520.391 75.961 C 1516.164 77.741 1512.421 79.638 1509.161 81.651 L 1504.551 73.591 C 1506.277 72.438 1508.317 71.261 1510.671 70.061 C 1513.024 68.861 1515.521 67.781 1518.161 66.821 C 1520.801 65.861 1523.607 65.068 1526.581 64.441 C 1529.554 63.821 1532.577 63.511 1535.651 63.511 C 1545.251 63.511 1552.381 66.128 1557.041 71.361 C 1561.694 76.588 1564.021 83.571 1564.021 92.311 L 1564.021 135.221 L 1554.371 135.221 L 1553.361 125.721 L 1552.931 125.721 C 1548.997 128.788 1544.654 131.428 1539.901 133.641 C 1535.147 135.848 1530.274 136.951 1525.281 136.951 Z M 1528.451 127.441 C 1532.484 127.441 1536.444 126.554 1540.331 124.781 C 1544.217 123.008 1548.177 120.441 1552.211 117.081 L 1552.211 98.641 C 1544.724 99.221 1538.461 100.038 1533.421 101.091 C 1528.381 102.151 1524.347 103.424 1521.321 104.911 C 1518.301 106.398 1516.167 108.078 1514.921 109.951 C 1513.667 111.824 1513.041 113.911 1513.041 116.211 C 1513.041 118.231 1513.474 119.934 1514.341 121.321 C 1515.207 122.714 1516.334 123.868 1517.721 124.781 C 1519.114 125.694 1520.747 126.368 1522.621 126.801 C 1524.494 127.228 1526.437 127.441 1528.451 127.441 Z\" style={pathStyle}/>\n                <path d=\"M 1632.981 136.951 C 1627.888 136.951 1623.614 136.254 1620.161 134.861 C 1616.708 133.468 1613.924 131.501 1611.811 128.961 C 1609.698 126.414 1608.184 123.364 1607.271 119.811 C 1606.358 116.258 1605.901 112.321 1605.901 108.001 L 1605.901 74.881 L 1586.181 74.881 L 1586.181 65.961 L 1606.341 65.241 L 1607.921 42.771 L 1617.711 42.771 L 1617.711 65.241 L 1652.131 65.241 L 1652.131 74.881 L 1617.711 74.881 L 1617.711 108.151 C 1617.711 111.318 1618.001 114.078 1618.581 116.431 C 1619.154 118.784 1620.114 120.774 1621.461 122.401 C 1622.801 124.034 1624.624 125.261 1626.931 126.081 C 1629.231 126.894 1632.061 127.301 1635.421 127.301 C 1638.781 127.301 1641.808 127.014 1644.501 126.441 C 1647.188 125.861 1649.778 125.091 1652.271 124.131 L 1654.861 132.771 C 1651.694 133.924 1648.361 134.908 1644.861 135.721 C 1641.354 136.541 1637.394 136.951 1632.981 136.951 Z\" style={pathStyle}/>\n                <path d=\"M 1690.561 166.471 C 1686.908 166.471 1683.354 166.014 1679.901 165.101 C 1676.448 164.188 1673.328 163.061 1670.541 161.721 L 1674.431 152.931 C 1676.924 154.178 1679.541 155.138 1682.281 155.811 C 1685.014 156.484 1687.724 156.821 1690.411 156.821 C 1693.871 156.821 1696.751 156.388 1699.051 155.521 C 1701.358 154.661 1703.181 153.414 1704.521 151.781 C 1705.868 150.148 1706.804 148.154 1707.331 145.801 C 1707.858 143.454 1708.121 140.791 1708.121 137.811 L 1708.121 74.881 L 1675.581 74.881 L 1675.581 65.241 L 1719.931 65.241 L 1719.931 136.951 C 1719.931 141.271 1719.451 145.231 1718.491 148.831 C 1717.531 152.431 1715.924 155.551 1713.671 158.191 C 1711.411 160.831 1708.411 162.871 1704.671 164.311 C 1700.924 165.751 1696.221 166.471 1690.561 166.471 Z\" style={pathStyle}/>\n                <path d=\"M 1712.731 50.551 C 1710.044 50.551 1707.788 49.711 1705.961 48.031 C 1704.141 46.351 1703.231 44.118 1703.231 41.331 C 1703.231 38.551 1704.141 36.321 1705.961 34.641 C 1707.788 32.961 1710.044 32.121 1712.731 32.121 C 1715.418 32.121 1717.674 32.961 1719.501 34.641 C 1721.328 36.321 1722.241 38.551 1722.241 41.331 C 1722.241 44.118 1721.328 46.351 1719.501 48.031 C 1717.674 49.711 1715.418 50.551 1712.731 50.551 Z\" style={pathStyle}/>\n                <path d=\"M 1806.311 135.221 L 1794.501 135.221 L 1794.501 74.881 L 1761.961 74.881 L 1761.961 65.241 L 1806.311 65.241 L 1806.311 135.221 Z\" style={pathStyle}/>\n                <path d=\"M 1799.111 50.551 C 1796.425 50.551 1794.168 49.711 1792.341 48.031 C 1790.521 46.351 1789.611 44.118 1789.611 41.331 C 1789.611 38.551 1790.521 36.321 1792.341 34.641 C 1794.168 32.961 1796.425 32.121 1799.111 32.121 C 1801.798 32.121 1804.055 32.961 1805.881 34.641 C 1807.708 36.321 1808.621 38.551 1808.621 41.331 C 1808.621 44.118 1807.708 46.351 1805.881 48.031 C 1804.055 49.711 1801.798 50.551 1799.111 50.551 Z\" style={pathStyle}/>\n                <path d=\"M 1882.902 136.951 C 1877.622 136.951 1872.702 136.134 1868.142 134.501 C 1863.582 132.868 1859.598 130.468 1856.192 127.301 C 1852.785 124.134 1850.095 120.271 1848.122 115.711 C 1846.155 111.151 1845.172 105.941 1845.172 100.081 C 1845.172 94.421 1846.155 89.334 1848.122 84.821 C 1850.095 80.308 1852.735 76.468 1856.042 73.301 C 1859.355 70.134 1863.148 67.711 1867.422 66.031 C 1871.695 64.351 1876.182 63.511 1880.882 63.511 C 1885.875 63.511 1890.365 64.301 1894.352 65.881 C 1898.332 67.468 1901.692 69.701 1904.432 72.581 C 1907.165 75.461 1909.252 78.918 1910.692 82.951 C 1912.132 86.984 1912.852 91.448 1912.852 96.341 C 1912.852 97.688 1912.805 98.984 1912.712 100.231 C 1912.612 101.478 1912.468 102.581 1912.282 103.541 L 1857.122 103.541 C 1857.895 111.508 1860.802 117.484 1865.842 121.471 C 1870.882 125.451 1877.048 127.441 1884.342 127.441 C 1888.568 127.441 1892.385 126.841 1895.792 125.641 C 1899.198 124.441 1902.485 122.834 1905.652 120.821 L 1909.972 128.601 C 1906.518 130.901 1902.558 132.868 1898.092 134.501 C 1893.632 136.134 1888.568 136.951 1882.902 136.951 Z M 1881.172 72.871 C 1878.292 72.871 1875.532 73.351 1872.892 74.311 C 1870.252 75.271 1867.875 76.638 1865.762 78.411 C 1863.655 80.191 1861.882 82.424 1860.442 85.111 C 1859.002 87.798 1857.992 90.868 1857.412 94.321 L 1902.052 94.321 C 1901.572 87.121 1899.485 81.748 1895.792 78.201 C 1892.092 74.648 1887.218 72.871 1881.172 72.871\" style={pathStyle}/>\n                <path d=\"M 1966.402 136.951 C 1959.489 136.951 1953.105 135.871 1947.252 133.711 C 1941.392 131.551 1936.302 128.981 1931.982 126.001 L 1937.462 118.231 C 1941.489 121.111 1945.929 123.414 1950.782 125.141 C 1955.629 126.868 1961.315 127.731 1967.842 127.731 C 1973.795 127.731 1978.235 126.651 1981.162 124.491 C 1984.089 122.331 1985.552 119.764 1985.552 116.791 C 1985.552 115.444 1985.312 114.194 1984.832 113.041 C 1984.352 111.894 1983.322 110.791 1981.742 109.731 C 1980.155 108.678 1977.922 107.671 1975.042 106.711 C 1972.162 105.751 1968.369 104.791 1963.662 103.831 C 1954.542 101.911 1947.702 99.341 1943.142 96.121 C 1938.582 92.908 1936.302 88.661 1936.302 83.381 C 1936.302 80.594 1936.929 77.978 1938.182 75.531 C 1939.429 73.084 1941.275 70.974 1943.722 69.201 C 1946.169 67.421 1949.192 66.028 1952.792 65.021 C 1956.392 64.014 1960.592 63.511 1965.392 63.511 C 1970.772 63.511 1975.955 64.398 1980.942 66.171 C 1985.935 67.951 1990.162 70.041 1993.622 72.441 L 1987.862 80.071 C 1984.595 77.864 1980.995 76.088 1977.062 74.741 C 1973.122 73.394 1968.895 72.721 1964.382 72.721 C 1958.435 72.721 1954.262 73.731 1951.862 75.751 C 1949.462 77.764 1948.262 80.114 1948.262 82.801 C 1948.262 85.874 1949.845 88.204 1953.012 89.791 C 1956.179 91.371 1961.362 92.931 1968.562 94.471 C 1974.415 95.718 1979.215 97.038 1982.962 98.431 C 1986.709 99.824 1989.662 101.384 1991.822 103.111 C 1993.982 104.838 1995.469 106.758 1996.282 108.871 C 1997.095 110.984 1997.502 113.384 1997.502 116.071 C 1997.502 118.951 1996.832 121.638 1995.492 124.131 C 1994.145 126.631 1992.152 128.841 1989.512 130.761 C 1986.872 132.681 1983.609 134.191 1979.722 135.291 C 1975.835 136.398 1971.395 136.951 1966.402 136.951 Z\" style={pathStyle}/>\n                <path d=\"M 2033.052 158.261 L 2022.402 158.261 L 2069.632 32.981 L 2080.282 32.981 L 2033.052 158.261 Z\" style={pathStyle}/>\n                <path d=\"M 2163.642 91.881 L 2109.932 128.311 L 2109.932 116.931 L 2153.272 87.701 L 2153.272 87.121 L 2109.932 57.891 L 2109.932 46.521 L 2163.642 82.951 L 2163.642 91.881 Z\" style={pathStyle}/>\n            </svg>\n        </div>\n    }\n}\n\nexport default withRouter(LoadingScreen);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Button as MaterialButton} from '@material-ui/core';\nimport {SocialIcon} from 'react-social-icons';\nimport {StylesProvider} from '@material-ui/core/styles';\nimport \"./Button.css\"\n\n\nfunction Button({type, className, linkTo, value, linePos, onClick = () => {\n    window.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n    });\n    document.activeElement.blur();\n}\n}){\n    if (linePos != null){\n        className += \" \" + linePos;\n    }\n    else {\n        className += \" leftLine\";\n    }\n    if (type === \"Link\"){\n        if (value === \"\"){\n            return linkButtonEmpty({className, linkTo, linePos});\n        }\n        else{\n            return linkButton({className, linkTo, value, linePos});\n        }\n    }\n    else if (type === \"Navigation\"){\n        if (value === \"\"){return navButtonEmpty({className, linkTo, linePos, onClick});}\n        return navButton({className, linkTo, value, linePos, onClick});\n    }\n    else if (type === \"Submit\"){\n        return submitButton({className, value, linePos, onClick});\n    }\n}\n\nfunction submitButton({className, value, linePos, onClick}){\n    return (\n        <StylesProvider injectFirst>\n            <MaterialButton\n                className={className}\n                disableFocusRipple={true}\n                disableRipple={true}\n                onClick={onClick}\n                >\n                <span>\n                    &lt;{value}/&gt;\n                </span>\n            </MaterialButton>\n        </StylesProvider>\n    );\n}\n\nfunction navButton({className, linkTo, value, linePos, onClick}){\n    return (\n        <StylesProvider injectFirst>\n            <MaterialButton\n                className={className}\n                onClick={onClick}\n                component={Link}\n                to={linkTo}\n                disableFocusRipple={true}\n                disableRipple={true}\n                >\n                <span>\n                    &lt;{value}/&gt;\n                </span>\n            </MaterialButton>\n        </StylesProvider>\n    );\n}\n\nfunction navButtonEmpty({className, linkTo, linePos, onClick}){\n    return (\n        <StylesProvider injectFirst>\n            <MaterialButton\n                className={className}\n                onClick={onClick}\n                component={Link}\n                to={linkTo}\n                disableFocusRipple={true}\n                disableRipple={true}\n                >\n                <SocialIcon network=\"email\" tabIndex=\"-1\" bgColor=\"transparent\" fgColor=\"var(--iconColor)\" style={{width:\"var(--iconSize)\", height:\"var(--iconSize)\", padding:0, margin:\"var(--iconMargin)\"}}/>\n            </MaterialButton>\n        </StylesProvider>\n    );\n}\n\nfunction linkButton({className, linkTo, value, linePos}){\n    return (\n        <StylesProvider injectFirst>\n            <MaterialButton\n                className={className}\n                onClick={() => {\n                    document.activeElement.blur();\n                }}\n                href={linkTo}\n                target=\"_blank\"\n                disableFocusRipple={true}\n                disableRipple={true}\n                endIcon={<SocialIcon url={linkTo} tabIndex=\"-1\" bgColor=\"transparent\" fgColor=\"var(--iconColor)\" style={{width:\"var(--textIconSize)\", height:\"var(--textIconSize)\", padding:0, margin:\"var(--textIconMargin)\"}}/>}\n                >\n                <span>\n                    &lt;{value}/&gt;\n                </span>\n            </MaterialButton>\n        </StylesProvider>\n    );\n}\n\nfunction linkButtonEmpty({className, linkTo, linePos}){\n    return (\n        <StylesProvider injectFirst>\n            <MaterialButton\n                className={className}\n                onClick={() => {\n                    document.activeElement.blur();\n                }}\n                href={linkTo}\n                target=\"_blank\"\n                disableFocusRipple={true}\n                disableRipple={true}\n                >\n                <SocialIcon url={linkTo} tabIndex=\"-1\" bgColor=\"transparent\" fgColor=\"var(--iconColor)\" style={{width:\"var(--iconSize)\", height:\"var(--iconSize)\", padding:0, margin:\"var(--iconMargin)\"}}/>\n            </MaterialButton>\n        </StylesProvider>\n    );\n}\n\nexport default Button;\n","import React, {useState} from 'react';\nimport Button from '../Button/Button.js';\nimport './Header.css'\n\nconst headerButtonsList = [\n    {\n        type: \"Navigation\",\n        className: \"button bHome header\",\n        linkTo: \"/Home\",\n        value: \"Home\"\n    },\n    {\n        type: \"Navigation\",\n        className: \"button bAbout header\",\n        linkTo: \"/About\",\n        value: \"About\"\n    },\n    {\n        type: \"Navigation\",\n        className: \"button bWork header\",\n        linkTo: \"/Past-work\",\n        value: \"Past Work\"\n    }\n    ,\n    {\n        type: \"Navigation\",\n        className: \"button bContact header\",\n        linkTo: \"/Contact-me\",\n        value: \"Contact Me!\"\n    }\n]\n\n\nfunction Header(){\n    const [isOpened, setOpened] = useState(false);\n\n    const toggleOpen = () => {\n        setOpened(!isOpened);\n    };\n\n    const clickThing = () => {\n        setOpened(false);\n        window.scroll({\n            top: 0,\n            left: 0,\n            behavior: 'smooth'\n        });\n        document.activeElement.blur();\n    };\n\n    return (\n        <header>\n            <div className=\"logo\">\n                    <Button\n                        type= \"Navigation\"\n                        className=\"headerHeader\"\n                        linkTo=\"/Home\"\n                        value=\"Malcolm Baatjies\"\n                        onClick={clickThing}\n                    ></Button>\n                <div\n                    className={isOpened ? \"menuButton showMenu opened\":\"menuButton hideMenu\"}\n                    onClick={toggleOpen}>\n                    <svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\">\n                    <path className=\"line line1\" d=\"M 20,29.000046 H 80.000231 C 80.000231,29.000046 94.498839,28.817352 94.532987,66.711331 94.543142,77.980673 90.966081,81.670246 85.259173,81.668997 79.552261,81.667751 75.000211,74.999942 75.000211,74.999942 L 25.000021,25.000058\" />\n                    <path className=\"line line2\" d=\"M 20,50 H 80\" />\n                    <path className=\"line line3\" d=\"M 20,70.999954 H 80.000231 C 80.000231,70.999954 94.498839,71.182648 94.532987,33.288669 94.543142,22.019327 90.966081,18.329754 85.259173,18.331003 79.552261,18.332249 75.000211,25.000058 75.000211,25.000058 L 25.000021,74.999942\" />\n                    </svg>\n                </div>\n                <div className=\"headerButtons\">\n                        {headerButtonsList.map(bButton => (\n                            <Button\n                                key={bButton.className}\n                                type={bButton.type}\n                                className={bButton.className}\n                                linkTo={bButton.linkTo}\n                                value={bButton.value}\n                                onClick={clickThing}\n                            ></Button>\n                        ))}\n                </div>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport Button from '../Button/Button';\nimport './Footer.css';\n\nconst pathStyle = {\n    whitespace: \"pre\",\n}\n\nconst socialLinks = [\n    {\n        type: \"Link\",\n        className: \"button bInstagram\",\n        linkTo: \"https://www.instagram.com/malcolm_baatjies/\",\n        linePos: \"topLine\"\n    },\n    {\n        type: \"Link\",\n        className: \"button bGitHub\",\n        linkTo: \"https://github.com/MalcolmBB\",\n        linePos: \"bottomLine\"\n    }\n    ,\n    {\n        type: \"Link\",\n        className: \"button bLinkedIn\",\n        linkTo: \"https://www.linkedin.com/in/malcolmbaatjies/\",\n        linePos: \"topLine\"\n    }\n    ,\n    {\n        type: \"Navigation\",\n        className: \"button bEmail\",\n        linkTo: \"/Contact-me\",\n        linePos: \"bottomLine\"\n    }\n]\n\nfunction Footer(){\n    return (\n        <footer>\n                <div className=\"socialLinks\">\n                    <div className=\"LogoContainer\" tabIndex=\"0\"\n                        onKeyPress={(event) => {\n                            if (event.key === 'Enter'){\n                                window.scroll({\n                                    top: 0,\n                                    left: 0,\n                                    behavior: 'smooth'\n                                });\n                            }\n                        }}\n\n                        onClick={() => {\n                        window.scroll({\n                            top: 0,\n                            left: 0,\n                            behavior: 'smooth'\n                        });\n                    }}>\n                        <svg viewBox=\"22.453 23.542 466.549 464.915\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <circle cx=\"257.089\" cy=\"255.455\" r=\"229.734\" transform=\"matrix(1.015411, 0, 0, 1.011855, -5.323695, -2.483635)\"/>\n                        <path d=\"M 165.236 295.478 L 165.236 312.19 L 84.487 258.67 L 84.487 245.554 L 165.236 192.034 L 165.236 208.746 L 100.074 251.689 L 100.074 252.535 L 165.236 295.478 Z\" style={pathStyle}/>\n                        <path d=\"M 429.532 258.439 L 348.783 311.959 L 348.783 295.247 L 413.945 252.304 L 413.945 251.458 L 348.783 208.515 L 348.783 191.803 L 429.532 245.323 L 429.532 258.439 Z\" style={pathStyle}/>\n                        <path d=\"M 82.533 266.497 L 79.447 266.497 L 79.755 240.232 L 83.785 240.232 L 87.283 251.446 L 88.499 255.687 L 88.661 255.687 L 89.935 251.446 L 93.739 240.232 L 97.76 240.232 L 97.451 266.497 L 94.297 266.497 L 94.452 253.369 C 94.459 252.725 94.487 251.983 94.537 251.145 C 94.587 250.3 94.648 249.453 94.72 248.602 C 94.798 247.746 94.867 246.918 94.928 246.119 C 94.994 245.32 95.056 244.639 95.113 244.076 L 94.994 244.076 L 93.472 249.205 L 89.636 259.532 L 87.273 259.532 L 83.756 249.205 L 82.32 244.076 L 82.243 244.076 C 82.288 244.639 82.339 245.32 82.398 246.119 C 82.451 246.918 82.498 247.746 82.539 248.602 C 82.586 249.453 82.623 250.3 82.653 251.145 C 82.684 251.983 82.694 252.725 82.687 253.369 L 82.533 266.497 Z M 109.998 266.979 C 109.103 266.979 108.26 266.853 107.47 266.6 C 106.685 266.341 105.998 265.979 105.408 265.514 C 104.825 265.048 104.366 264.473 104.034 263.79 C 103.696 263.112 103.533 262.333 103.543 261.454 C 103.556 260.357 103.825 259.402 104.35 258.592 C 104.87 257.776 105.694 257.075 106.823 256.489 C 107.946 255.903 109.392 255.423 111.159 255.049 C 112.931 254.676 115.054 254.38 117.527 254.162 C 117.507 253.495 117.409 252.869 117.235 252.282 C 117.055 251.696 116.772 251.182 116.386 250.739 C 115.994 250.302 115.477 249.949 114.834 249.679 C 114.197 249.415 113.417 249.283 112.493 249.283 C 111.229 249.283 110.016 249.53 108.854 250.024 C 107.687 250.518 106.652 251.044 105.75 251.601 L 104.518 249.36 C 104.992 249.039 105.555 248.711 106.205 248.378 C 106.855 248.044 107.544 247.746 108.272 247.481 C 108.995 247.211 109.766 246.99 110.584 246.817 C 111.402 246.645 112.233 246.559 113.077 246.559 C 115.707 246.559 117.653 247.286 118.917 248.74 C 120.175 250.194 120.79 252.136 120.761 254.567 L 120.621 266.497 L 117.978 266.497 L 117.728 263.85 L 117.609 263.85 C 116.522 264.706 115.323 265.442 114.013 266.057 C 112.703 266.671 111.364 266.979 109.998 266.979 Z M 110.896 264.333 C 112.002 264.333 113.09 264.086 114.161 263.592 C 115.232 263.098 116.326 262.385 117.442 261.454 L 117.502 256.325 C 115.449 256.486 113.729 256.713 112.343 257.006 C 110.956 257.299 109.847 257.653 109.015 258.066 C 108.183 258.48 107.591 258.948 107.239 259.471 C 106.893 259.989 106.716 260.569 106.708 261.213 C 106.702 261.77 106.815 262.244 107.049 262.635 C 107.276 263.02 107.582 263.339 107.964 263.592 C 108.341 263.844 108.786 264.031 109.3 264.152 C 109.809 264.273 110.341 264.333 110.896 264.333 Z M 140.028 266.979 C 137.976 266.979 136.419 266.39 135.357 265.212 C 134.288 264.04 133.768 262.293 133.795 259.971 L 134.022 240.672 L 127.196 240.672 L 127.227 237.991 L 137.292 237.991 L 137.031 260.213 C 137.014 261.655 137.344 262.689 138.023 263.316 C 138.701 263.942 139.618 264.255 140.774 264.255 C 141.908 264.255 143.11 263.962 144.381 263.376 L 145.176 265.816 C 144.276 266.189 143.457 266.477 142.718 266.678 C 141.979 266.878 141.082 266.979 140.028 266.979 Z M 161.303 266.979 C 159.801 266.979 158.415 266.753 157.146 266.298 C 155.876 265.844 154.773 265.184 153.837 264.316 C 152.895 263.448 152.168 262.379 151.656 261.109 C 151.149 259.845 150.905 258.411 150.924 256.808 C 150.943 255.181 151.241 253.733 151.817 252.463 C 152.398 251.194 153.181 250.119 154.167 249.24 C 155.151 248.36 156.298 247.694 157.607 247.24 C 158.916 246.786 160.293 246.559 161.738 246.559 C 163.319 246.559 164.679 246.837 165.817 247.395 C 166.955 247.958 167.913 248.628 168.692 249.403 L 167.052 251.524 C 166.273 250.828 165.457 250.28 164.607 249.877 C 163.755 249.481 162.828 249.283 161.825 249.283 C 160.72 249.283 159.707 249.461 158.784 249.817 C 157.856 250.179 157.065 250.694 156.412 251.36 C 155.758 252.026 155.241 252.823 154.862 253.748 C 154.482 254.668 154.287 255.687 154.273 256.808 C 154.26 257.928 154.427 258.943 154.773 259.851 C 155.119 260.758 155.612 261.54 156.25 262.195 C 156.883 262.844 157.653 263.35 158.562 263.712 C 159.463 264.074 160.468 264.255 161.573 264.255 C 162.757 264.255 163.845 264.023 164.837 263.557 C 165.828 263.086 166.724 262.506 167.526 261.816 L 168.955 263.936 C 167.867 264.896 166.674 265.643 165.376 266.178 C 164.082 266.712 162.725 266.979 161.303 266.979 Z M 183.163 266.979 C 181.9 266.979 180.698 266.753 179.558 266.298 C 178.419 265.844 177.421 265.184 176.564 264.316 C 175.707 263.448 175.028 262.379 174.527 261.109 C 174.032 259.845 173.794 258.411 173.813 256.808 C 173.832 255.181 174.104 253.733 174.629 252.463 C 175.16 251.194 175.864 250.119 176.741 249.24 C 177.618 248.36 178.633 247.694 179.782 247.24 C 180.933 246.786 182.14 246.559 183.403 246.559 C 184.667 246.559 185.869 246.786 187.008 247.24 C 188.147 247.694 189.149 248.36 190.01 249.24 C 190.867 250.119 191.546 251.194 192.047 252.463 C 192.542 253.733 192.78 255.181 192.761 256.808 C 192.742 258.411 192.47 259.845 191.945 261.109 C 191.415 262.379 190.711 263.448 189.833 264.316 C 188.951 265.184 187.934 265.844 186.784 266.298 C 185.634 266.753 184.427 266.979 183.163 266.979 Z M 183.195 264.255 C 184.119 264.255 184.957 264.074 185.709 263.712 C 186.467 263.35 187.119 262.844 187.665 262.195 C 188.212 261.54 188.634 260.758 188.934 259.851 C 189.233 258.943 189.39 257.928 189.403 256.808 C 189.416 255.687 189.284 254.668 189.005 253.748 C 188.727 252.823 188.323 252.026 187.792 251.36 C 187.262 250.694 186.622 250.179 185.872 249.817 C 185.128 249.461 184.295 249.283 183.371 249.283 C 182.453 249.283 181.615 249.461 180.857 249.817 C 180.105 250.179 179.456 250.694 178.909 251.36 C 178.363 252.026 177.94 252.823 177.64 253.748 C 177.335 254.668 177.175 255.687 177.162 256.808 C 177.149 257.928 177.285 258.943 177.568 259.851 C 177.847 260.758 178.252 261.54 178.782 262.195 C 179.313 262.844 179.95 263.35 180.694 263.712 C 181.443 264.074 182.277 264.255 183.195 264.255 Z M 211.068 266.979 C 209.017 266.979 207.46 266.39 206.396 265.212 C 205.328 264.04 204.807 262.293 204.834 259.971 L 205.061 240.672 L 198.235 240.672 L 198.267 237.991 L 208.331 237.991 L 208.07 260.213 C 208.053 261.655 208.385 262.689 209.062 263.316 C 209.741 263.942 210.658 264.255 211.814 264.255 C 212.948 264.255 214.15 263.962 215.42 263.376 L 216.216 265.816 C 215.316 266.189 214.497 266.477 213.758 266.678 C 213.019 266.878 212.122 266.979 211.068 266.979 Z M 224.213 266.497 L 220.974 266.497 L 221.203 247.042 L 223.813 247.042 L 224.054 249.602 L 224.139 249.602 C 224.649 248.694 225.236 247.958 225.9 247.395 C 226.563 246.837 227.448 246.559 228.553 246.559 C 230.423 246.559 231.623 247.679 232.152 249.921 C 232.714 248.88 233.336 248.059 234.017 247.455 C 234.693 246.858 235.583 246.559 236.688 246.559 C 238.031 246.559 239.071 247.073 239.807 248.102 C 240.549 249.13 240.908 250.619 240.885 252.567 L 240.721 266.497 L 237.482 266.497 L 237.643 252.808 C 237.67 250.539 236.997 249.403 235.626 249.403 C 234.946 249.403 234.391 249.651 233.96 250.145 C 233.535 250.639 233.053 251.392 232.514 252.403 L 232.348 266.497 L 229.347 266.497 L 229.508 252.808 C 229.521 251.682 229.381 250.834 229.088 250.265 C 228.788 249.69 228.284 249.403 227.576 249.403 C 226.89 249.403 226.307 249.651 225.825 250.145 C 225.349 250.639 224.866 251.392 224.379 252.403 L 224.213 266.497 Z M 277.889 266.497 L 269.958 266.497 L 270.267 240.232 L 277.611 240.232 C 278.925 240.232 280.129 240.353 281.22 240.594 C 282.305 240.835 283.232 241.209 284.003 241.715 C 284.779 242.221 285.378 242.881 285.799 243.697 C 286.226 244.513 286.433 245.493 286.419 246.636 C 286.404 247.947 286.021 249.128 285.272 250.179 C 284.523 251.237 283.369 251.963 281.813 252.36 L 281.811 252.524 C 283.699 252.817 285.166 253.483 286.207 254.524 C 287.249 255.564 287.76 256.991 287.738 258.808 C 287.723 260.089 287.472 261.21 286.985 262.169 C 286.497 263.135 285.821 263.936 284.959 264.574 C 284.101 265.218 283.07 265.697 281.865 266.014 C 280.665 266.335 279.339 266.497 277.889 266.497 Z M 273.507 243.033 L 273.41 251.283 L 276.929 251.283 C 279.139 251.283 280.727 250.923 281.693 250.205 C 282.665 249.481 283.16 248.386 283.177 246.921 C 283.194 245.479 282.698 244.47 281.691 243.895 C 280.683 243.32 279.179 243.033 277.179 243.033 L 273.507 243.033 Z M 273.377 254.084 L 273.264 263.695 L 277.455 263.695 C 279.687 263.695 281.415 263.301 282.637 262.514 C 283.858 261.727 284.48 260.439 284.501 258.652 C 284.521 257.021 283.942 255.851 282.766 255.144 C 281.589 254.437 279.857 254.084 277.568 254.084 L 273.377 254.084 Z M 299.439 266.979 C 298.543 266.979 297.7 266.853 296.91 266.6 C 296.125 266.341 295.438 265.979 294.848 265.514 C 294.264 265.048 293.807 264.473 293.475 263.79 C 293.137 263.112 292.973 262.333 292.983 261.454 C 292.996 260.357 293.265 259.402 293.791 258.592 C 294.31 257.776 295.135 257.075 296.264 256.489 C 297.387 255.903 298.831 255.423 300.599 255.049 C 302.371 254.676 304.494 254.38 306.968 254.162 C 306.947 253.495 306.849 252.869 306.675 252.282 C 306.495 251.696 306.212 251.182 305.826 250.739 C 305.434 250.302 304.918 249.949 304.275 249.679 C 303.637 249.415 302.856 249.283 301.933 249.283 C 300.669 249.283 299.457 249.53 298.295 250.024 C 297.127 250.518 296.092 251.044 295.19 251.601 L 293.959 249.36 C 294.432 249.039 294.995 248.711 295.645 248.378 C 296.295 248.044 296.983 247.746 297.712 247.481 C 298.435 247.211 299.206 246.99 300.024 246.817 C 300.842 246.645 301.673 246.559 302.518 246.559 C 305.147 246.559 307.093 247.286 308.357 248.74 C 309.615 250.194 310.23 252.136 310.202 254.567 L 310.061 266.497 L 307.418 266.497 L 307.168 263.85 L 307.049 263.85 C 305.962 264.706 304.764 265.442 303.453 266.057 C 302.142 266.671 300.804 266.979 299.439 266.979 Z M 300.337 264.333 C 301.442 264.333 302.529 264.086 303.601 263.592 C 304.672 263.098 305.766 262.385 306.882 261.454 L 306.942 256.325 C 304.888 256.486 303.169 256.713 301.783 257.006 C 300.396 257.299 299.287 257.653 298.455 258.066 C 297.622 258.48 297.03 258.948 296.679 259.471 C 296.333 259.989 296.156 260.569 296.149 261.213 C 296.142 261.77 296.255 262.244 296.489 262.635 C 296.716 263.02 297.021 263.339 297.404 263.592 C 297.78 263.844 298.226 264.031 298.741 264.152 C 299.249 264.273 299.781 264.333 300.337 264.333 Z M 323.118 266.979 C 322.223 266.979 321.38 266.853 320.589 266.6 C 319.805 266.341 319.117 265.979 318.528 265.514 C 317.944 265.048 317.486 264.473 317.154 263.79 C 316.817 263.112 316.652 262.333 316.663 261.454 C 316.676 260.357 316.945 259.402 317.47 258.592 C 317.99 257.776 318.814 257.075 319.943 256.489 C 321.067 255.903 322.511 255.423 324.278 255.049 C 326.051 254.676 328.174 254.38 330.647 254.162 C 330.627 253.495 330.53 252.869 330.354 252.282 C 330.174 251.696 329.891 251.182 329.506 250.739 C 329.115 250.302 328.597 249.949 327.954 249.679 C 327.317 249.415 326.536 249.283 325.612 249.283 C 324.349 249.283 323.136 249.53 321.974 250.024 C 320.807 250.518 319.772 251.044 318.87 251.601 L 317.638 249.36 C 318.113 249.039 318.674 248.711 319.324 248.378 C 319.974 248.044 320.664 247.746 321.392 247.481 C 322.115 247.211 322.885 246.99 323.703 246.817 C 324.521 246.645 325.353 246.559 326.197 246.559 C 328.827 246.559 330.774 247.286 332.037 248.74 C 333.295 250.194 333.909 252.136 333.881 254.567 L 333.741 266.497 L 331.097 266.497 L 330.848 263.85 L 330.729 263.85 C 329.642 264.706 328.444 265.442 327.132 266.057 C 325.822 266.671 324.484 266.979 323.118 266.979 Z M 324.016 264.333 C 325.121 264.333 326.209 264.086 327.28 263.592 C 328.352 263.098 329.445 262.385 330.561 261.454 L 330.622 256.325 C 328.568 256.486 326.849 256.713 325.462 257.006 C 324.077 257.299 322.967 257.653 322.134 258.066 C 321.302 258.48 320.71 258.948 320.358 259.471 C 320.012 259.989 319.835 260.569 319.828 261.213 C 319.821 261.77 319.935 262.244 320.168 262.635 C 320.397 263.02 320.701 263.339 321.083 263.592 C 321.46 263.844 321.906 264.031 322.42 264.152 C 322.929 264.273 323.461 264.333 324.016 264.333 Z M 352.638 266.979 C 351.244 266.979 350.076 266.784 349.134 266.393 C 348.186 266.008 347.428 265.462 346.858 264.755 C 346.288 264.048 345.885 263.201 345.647 262.212 C 345.409 261.224 345.297 260.129 345.311 258.928 L 345.42 249.722 L 340.005 249.722 L 340.034 247.24 L 345.57 247.042 L 346.077 240.792 L 348.763 240.792 L 348.69 247.042 L 358.125 247.042 L 358.094 249.722 L 348.658 249.722 L 348.55 258.971 C 348.539 259.851 348.61 260.618 348.761 261.273 C 348.906 261.928 349.16 262.482 349.523 262.937 C 349.887 263.391 350.384 263.73 351.016 263.954 C 351.642 264.184 352.418 264.298 353.341 264.298 C 354.265 264.298 355.096 264.218 355.834 264.057 C 356.573 263.896 357.284 263.68 357.967 263.411 L 358.653 265.816 C 357.782 266.137 356.864 266.41 355.898 266.634 C 354.938 266.865 353.851 266.979 352.638 266.979 Z M 368.325 275.185 C 367.327 275.185 366.354 275.059 365.405 274.806 C 364.462 274.553 363.609 274.24 362.849 273.866 L 363.948 271.418 C 364.63 271.769 365.344 272.036 366.09 272.22 C 366.836 272.41 367.577 272.505 368.314 272.505 C 369.266 272.505 370.058 272.384 370.689 272.142 C 371.327 271.901 371.833 271.554 372.206 271.099 C 372.58 270.645 372.841 270.091 372.991 269.436 C 373.146 268.787 373.228 268.048 373.238 267.221 L 373.444 249.722 L 364.518 249.722 L 364.549 247.042 L 376.714 247.042 L 376.48 266.979 C 376.465 268.18 376.319 269.281 376.041 270.281 C 375.768 271.281 375.32 272.149 374.693 272.884 C 374.061 273.619 373.23 274.185 372.199 274.582 C 371.169 274.984 369.878 275.185 368.325 275.185 Z M 374.781 242.956 C 374.044 242.956 373.43 242.723 372.936 242.258 C 372.443 241.786 372.201 241.165 372.21 240.396 C 372.219 239.62 372.476 238.999 372.98 238.534 C 373.484 238.062 374.104 237.827 374.841 237.827 C 375.578 237.827 376.196 238.062 376.695 238.534 C 377.188 238.999 377.43 239.62 377.421 240.396 C 377.412 241.165 377.155 241.786 376.651 242.258 C 376.141 242.723 375.518 242.956 374.781 242.956 Z M 400.165 266.497 L 396.927 266.497 L 397.124 249.722 L 388.198 249.722 L 388.23 247.042 L 400.394 247.042 L 400.165 266.497 Z M 398.461 242.956 C 397.724 242.956 397.11 242.723 396.616 242.258 C 396.123 241.786 395.881 241.165 395.89 240.396 C 395.899 239.62 396.156 238.999 396.66 238.534 C 397.165 238.062 397.785 237.827 398.522 237.827 C 399.259 237.827 399.876 238.062 400.375 238.534 C 400.868 238.999 401.11 239.62 401.101 240.396 C 401.092 241.165 400.836 241.786 400.331 242.258 C 399.822 242.723 399.198 242.956 398.461 242.956 Z M 421.154 266.979 C 419.703 266.979 418.357 266.753 417.115 266.298 C 415.869 265.844 414.782 265.178 413.858 264.298 C 412.933 263.413 412.209 262.339 411.685 261.075 C 411.162 259.805 410.91 258.357 410.929 256.73 C 410.947 255.155 411.233 253.739 411.786 252.481 C 412.339 251.228 413.078 250.162 414 249.283 C 414.917 248.404 415.962 247.729 417.135 247.257 C 418.314 246.792 419.549 246.559 420.841 246.559 C 422.207 246.559 423.434 246.78 424.522 247.223 C 425.611 247.66 426.525 248.28 427.263 249.084 C 428.002 249.884 428.563 250.843 428.947 251.963 C 429.33 253.084 429.514 254.325 429.498 255.687 C 429.493 256.06 429.475 256.42 429.443 256.765 C 429.416 257.116 429.373 257.422 429.313 257.687 L 414.19 257.687 C 414.379 259.905 415.156 261.566 416.52 262.669 C 417.89 263.779 419.576 264.333 421.576 264.333 C 422.738 264.333 423.785 264.167 424.718 263.833 C 425.657 263.499 426.566 263.055 427.446 262.497 L 428.602 264.652 C 427.648 265.296 426.556 265.844 425.327 266.298 C 424.097 266.753 422.707 266.979 421.154 266.979 Z M 420.887 249.162 C 420.099 249.162 419.341 249.294 418.613 249.559 C 417.884 249.828 417.228 250.211 416.644 250.705 C 416.06 251.199 415.566 251.82 415.16 252.567 C 414.76 253.314 414.476 254.168 414.305 255.127 L 426.538 255.127 C 426.431 253.127 425.876 251.633 424.873 250.645 C 423.876 249.656 422.547 249.162 420.887 249.162 Z M 444.043 266.979 C 442.144 266.979 440.397 266.678 438.8 266.074 C 437.203 265.477 435.818 264.764 434.643 263.936 L 436.165 261.773 C 437.26 262.572 438.471 263.212 439.797 263.695 C 441.118 264.172 442.673 264.411 444.464 264.411 C 446.097 264.411 447.318 264.111 448.13 263.514 C 448.941 262.911 449.353 262.195 449.362 261.368 C 449.367 260.994 449.303 260.65 449.171 260.333 C 449.043 260.012 448.767 259.704 448.34 259.411 C 447.906 259.118 447.298 258.836 446.514 258.566 C 445.723 258.302 444.686 258.034 443.403 257.765 C 440.904 257.236 439.037 256.523 437.801 255.627 C 436.559 254.73 435.947 253.55 435.964 252.084 C 435.973 251.308 436.152 250.582 436.5 249.903 C 436.853 249.22 437.367 248.63 438.042 248.136 C 438.722 247.642 439.557 247.257 440.546 246.981 C 441.536 246.699 442.688 246.559 444.003 246.559 C 445.476 246.559 446.895 246.806 448.261 247.3 C 449.621 247.794 450.773 248.375 451.717 249.041 L 450.111 251.162 C 449.223 250.547 448.242 250.052 447.171 249.679 C 446.092 249.306 444.936 249.119 443.7 249.119 C 442.068 249.119 440.92 249.401 440.256 249.964 C 439.592 250.521 439.256 251.173 439.247 251.92 C 439.237 252.776 439.663 253.426 440.525 253.868 C 441.387 254.305 442.804 254.739 444.777 255.17 C 446.376 255.515 447.687 255.879 448.708 256.265 C 449.729 256.655 450.535 257.09 451.124 257.566 C 451.708 258.049 452.109 258.584 452.33 259.17 C 452.544 259.756 452.646 260.422 452.638 261.169 C 452.628 261.974 452.435 262.721 452.059 263.411 C 451.682 264.106 451.128 264.721 450.396 265.255 C 449.67 265.79 448.77 266.209 447.695 266.514 C 446.626 266.824 445.408 266.979 444.043 266.979 Z\" style={{lineHeight: \"71.1524px\", whiteSpace: \"pre\"}} transform=\"matrix(0.427532, -0.904, 0.904, 0.427532, -79.580588, 387.344006)\"/>\n                        </svg>\n\n                    </div>\n                    {socialLinks.map(bButton => (\n                        <Button\n                            key={bButton.className}\n                            type={bButton.type}\n                            className={bButton.className}\n                            linkTo={bButton.linkTo}\n                            value=\"\"\n                            linePos={bButton.linePos}\n                        ></Button>\n                    ))}\n                </div>\n                <div className=\"legalities\">\n                    <a className=\"PrivacyPolicy\" href=\"https://www.freeprivacypolicy.com/live/ca89b9c8-e4ba-48a1-bf36-bc25098de305\">Privacy Policy</a>\n\n                    <a className=\"SiteMap\" href=\"https://www.xml-sitemaps.com/\">Sitemap</a>\n                </div>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Button from '../../../Button/Button';\nimport {Slide} from 'react-awesome-reveal';\nimport \"./WorkContainer.css\"\n\nvar enterDir;\n\nfunction WorkContainer({\n    type,\n    sideKey,\n    Title,\n    imgSrc,\n    imgAlt,\n    paragraph,\n    buttonClassName,\n    buttonLinkTo,\n    buttonType=\"Link\",\n    buttonValue=\"View GitHub repository\",\n    classes =\"ExteriorContainer\"\n}) {\n    if (type === \"mainAbout\") {\n        classes += \" Left MainAbout\";\n        buttonType=\"Navigation\";\n        buttonValue=\"More about me!\";\n    }\n    else {\n        if (sideKey % 2 === 0) {\n            classes += \" Right\";\n            enterDir=\"right\";\n        } else {\n            classes += \" Left\";\n            enterDir=\"left\";\n        }\n        if (type === \"mainWork\") {\n            classes += \" MainWork\";\n            buttonClassName += \" invert\";\n        }\n    }\n    return(\n        <Slide\n            triggerOnce\n            duration={1200}\n            direction={enterDir}\n            fraction={0.7}\n            >\n            {Work({\n                Title,\n                imgSrc,\n                imgAlt,\n                paragraph,\n                buttonClassName,\n                buttonLinkTo,\n                buttonValue,\n                buttonType,\n                classes\n            })}\n        </Slide>)\n}\n\nfunction Work({\n    Title,\n    imgSrc,\n    imgAlt,\n    paragraph,\n    buttonClassName,\n    buttonLinkTo,\n    buttonValue,\n    buttonType,\n    classes\n}) {\n    return (<div className={classes}>\n        <h2>{Title}</h2>\n        <div className=\"ContentContainer\">\n            <img src={imgSrc} alt={imgAlt}/>\n            <div className=\"SummaryContainer\">\n                <p>{paragraph}</p>\n                <Button type={buttonType} className={buttonClassName} linkTo={buttonLinkTo} value={buttonValue}></Button>\n            </div>\n        </div>\n    </div>);\n}\n\nexport default WorkContainer;\n","import React from 'react';\nimport {Slide} from 'react-awesome-reveal';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport './Card.css';\n\nvar animDirection;\n\nfunction Card({type, Title, subTitle, imgSrc, imgAlt, paragraph, classes = \"Card\", animKey}){\n    animDirection = \"down\";\n\n    if (useMediaQuery('only screen and (width<768px)')){\n        if (Math.random() < 0.5){\n            animDirection = \"right\";\n        }\n        else{\n            animDirection = \"left\";\n        }\n    }\n    if (type === \"Picture\"){\n        classes += \" Picture\"\n        return (\n            <Slide\n                triggerOnce\n                duration={1200}\n                delay={350}\n                direction={animDirection}\n                fraction={0.8}\n                >\n                <div className={classes}>\n                    <h3>{Title}</h3>\n                    <h4>{subTitle}</h4>\n                    <img src={imgSrc} alt={imgAlt}/>\n                    <div>\n                        {paragraph.map((par) => (\n                        <p style={{whiteSpace:\"pre-line\",}}>\n                            {par}\n                        </p>\n                        ))}\n                    </div>\n                </div>\n            </Slide>\n        )\n    }\n    else if (type === \"Empty\"){\n        classes += \" Empty\"\n        return (\n            <Slide\n                triggerOnce\n                duration={1200}\n                delay={350}\n                direction={animDirection}\n                fraction={0.8}\n                >\n                <div className={classes}>\n                    <h3>{Title}</h3>\n                    <h4>{subTitle}</h4>\n                        <div>\n                            {paragraph.map((par) => (\n                            <p style={{whiteSpace:\"pre-line\",}}>\n                                {par}\n                            </p>\n                            ))}\n                        </div>\n                </div>\n            </Slide>\n        )\n    }\n    return (\n        <Slide\n            triggerOnce\n            duration={1200}\n            delay={350}\n            direction={animDirection}\n            fraction={0.8}\n            >\n            <div className={classes}>\n                <h3>{Title}</h3>\n                <h4>{subTitle}</h4>\n                    <div>\n                        {paragraph.map((par) => (\n                        <p style={{whiteSpace:\"pre-line\",}}>\n                            {par}\n                        </p>\n                        ))}\n                    </div>\n            </div>\n        </Slide>\n    )\n}\n\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nimport {Slide} from 'react-awesome-reveal';\nimport './PopOut.css';\n\nvar dir;\n\nfunction PopOut({cards, sideKey, classes=\"PopOut\", startSide = \"startLeft\"}){\n    if (sideKey % 2 === 0){\n        classes += \" popRight\";\n        dir = \"right\";\n    }\n    else{\n        classes += \" popLeft\";\n        dir = \"left\";\n    }\n    classes += \" \" + startSide;\n    return (\n        <Slide\n            triggerOnce\n            duration={1200}\n            cascade\n            damping={1}\n            direction={dir}\n            fraction={0.5}\n            >\n            <div className={classes}>\n                {cards.map((card, key) => (\n                    <Card\n                        key={key}\n                        type={card.type}\n                        Title={card.Title}\n                        subTitle={card.subTitle}\n                        imgSrc={card.imgSrc}\n                        imgAlt={card.imgAlt}\n                        paragraph={card.paragraph}\n                        animKey={key}\n                    ></Card>\n                ))}\n            </div>\n        </Slide>\n    );\n}\n\nexport default PopOut;\n","import React from 'react';\nimport Button from '../../../Button/Button';\nimport PopOut from '../../../Card/PopOut';\nimport {Slide} from 'react-awesome-reveal';\nimport \"./AboutContent.css\"\n\nvar dir;\nvar shift = 0;\nvar threeCards = [];\nvar temp = [];\nvar startSide;\n\nfunction AboutContent({type=\"Text\", sideKey=0, Title=\"Placeholder\", imgSrc, imgAlt, paragraph=\"-EmptyThingy-\", cards, classes=\"aboutContentExterior\", buttonClassName, buttonLinkTo, buttonValue, buttonType}) {\n    if (sideKey % 2 === 0){\n        classes += \" Left\";\n        startSide = \"startLeft\";\n        dir = \"left\";\n        shift = 0;\n    }\n    else{\n        classes += \" Right\";\n        startSide = \"startRight\";\n        dir = \"right\";\n        shift = 1;\n    }\n    if (type === \"Text\"){\n        return(\n            <Slide\n                triggerOnce\n                duration={1200}\n                direction={dir}\n                fraction={0.5}\n                >\n                    {defaultTextOnlyAboutContent({Title, paragraph, classes})}\n            </Slide>\n        );\n    }\n    else if (type === \"Picture\"){\n        classes += \" Picture\";\n        return(\n            <Slide\n                triggerOnce\n                duration={1200}\n                direction={dir}\n                fraction={0.5}\n                >\n                    {defaultPictureAboutContent({Title, paragraph, imgSrc, imgAlt, classes})}\n            </Slide>\n        );\n    }\n    else if (type === \"Button\"){\n        classes = \"MainAbout\";\n        dir=\"left\";\n        return(\n            <Slide\n                triggerOnce\n                duration={1200}\n                direction={dir}\n                fraction={0.5}\n                >\n                {buttonAboutContent({\n                    Title,\n                    imgSrc,\n                    imgAlt,\n                    paragraph,\n                    buttonClassName,\n                    buttonLinkTo,\n                    buttonValue,\n                    buttonType,\n                    classes\n                })}\n            </Slide>\n        );\n    }\n    else if (type === \"Card\"){\n        classes += \" cardsContainer\"\n        return (\n            <Slide\n                triggerOnce\n                duration={1000}\n                direction={dir}\n                cascade\n                damping={1}\n                fraction={0.05}\n                >\n                {cardsAboutContent({\n                Title,\n                paragraph,\n                classes,\n                cards,\n                })}\n            </Slide>\n        );\n    }\n}\n\nfunction defaultTextOnlyAboutContent({Title, paragraph, classes}){\n    return (\n        <div className={classes}>\n            <h2>{Title}</h2>\n            <div>\n                {paragraph.map((par) => (\n                    <p style={{whiteSpace:\"pre-line\",}}>\n                        {par}\n                    </p>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nfunction buttonAboutContent({\n    Title,\n    imgSrc,\n    imgAlt,\n    paragraph,\n    buttonClassName,\n    buttonLinkTo,\n    buttonValue,\n    buttonType,\n    classes\n}) {\n    return (<div className={classes}>\n        <h2>{Title}</h2>\n        <div className=\"ContentContainer\">\n            <img src={imgSrc} alt={imgAlt}/>\n            <div className=\"SummaryContainer\">\n                <div>\n                    {paragraph.map((par) => (\n                    <p style={{whiteSpace:\"pre-line\",}}>\n                        {par}\n                    </p>\n                    ))}\n                </div>\n                <Button type={buttonType} className={buttonClassName} linkTo={buttonLinkTo} value={buttonValue}></Button>\n            </div>\n        </div>\n    </div>);\n}\n\nfunction defaultPictureAboutContent({Title, paragraph, imgSrc, imgAlt, classes}){\n    if (classes.includes(\"Left\")){\n        return (\n            <div className={classes}>\n                <h2>{Title}</h2>\n                <div>\n                    <img src={imgSrc} alt={imgAlt}/>\n                    <p>{paragraph}</p>\n                </div>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className={classes}>\n                <h2>{Title}</h2>\n                <div>\n                    <p>{paragraph}</p>\n                    <img src={imgSrc} alt={imgAlt}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction cardsAboutContent({Title, paragraph, classes, cards}){\n    threeCards = [];\n    cards.forEach((card) => {\n        temp.push(card);\n        if ((temp.length === 3) || (cards.indexOf(card) === cards.length - 1)){\n            threeCards.push(temp)\n            temp = []\n        }\n    })\n    if (paragraph === \"-EmptyThingy-\"){\n        return (\n            <div className={classes}>\n                <h2>{Title}</h2>\n                {threeCards.map((card, key) => (\n                    <PopOut cards={card} sideKey={key + shift} startSide={startSide}></PopOut>\n                ))}\n            </div>\n        );\n    }\n    return (\n        <div className={classes}>\n            <h2>{Title}</h2>\n                <div>\n                    {paragraph.map((par, key) => (\n                    <p key={key} style={{whiteSpace:\"pre-line\",}}>\n                        {par}\n                    </p>\n                    ))}\n                </div>\n                <br></br>\n                <br></br>\n            {threeCards.map((card, key) => (\n                <PopOut key={key} cards={card} sideKey={key + shift} startSide={startSide}></PopOut>\n            ))}\n        </div>\n    );\n}\n\nexport default AboutContent;\n","const WorkList = [\n    {\n        Title:\"Project n\",\n        imgSrc:\"../images/PastWork/Test1.jpg\",\n        imgAlt:\"Project n picture\",\n        paragraph:\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n        buttonClassName:\"button bProject\",\n        buttonLinkTo:\"https://github.com/\"\n    },\n    {\n        Title:\"Project n\",\n        imgSrc:\"../images/PastWork/Test1.jpg\",\n        imgAlt:\"Project n picture\",\n        paragraph:\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n        buttonClassName:\"button bProject\",\n        buttonLinkTo:\"https://github.com/\"\n    },\n    {\n        Title:\"Project n\",\n        imgSrc:\"../images/PastWork/Test1.jpg\",\n        imgAlt:\"Project n picture\",\n        paragraph:\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n        buttonClassName:\"button bProject\",\n        buttonLinkTo:\"https://github.com/\"\n    },\n    {\n        Title:\"Project n\",\n        imgSrc:\"../images/PastWork/Test1.jpg\",\n        imgAlt:\"Project n picture\",\n        paragraph:\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n        buttonClassName:\"button bProject\",\n        buttonLinkTo:\"https://github.com/\"\n    },\n    {\n        Title:\"Project n\",\n        imgSrc:\"../images/PastWork/Test1.jpg\",\n        imgAlt:\"Project n picture\",\n        paragraph:\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n        buttonClassName:\"button bProject\",\n        buttonLinkTo:\"https://github.com/\"\n    },\n    {\n        Title:\"Project n\",\n        imgSrc:\"../images/PastWork/Test1.jpg\",\n        imgAlt:\"Project n picture\",\n        paragraph:\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n        buttonClassName:\"button bProject\",\n        buttonLinkTo:\"https://github.com/\"\n    },\n    {\n        Title:\"Project n\",\n        imgSrc:\"../images/PastWork/Test1.jpg\",\n        imgAlt:\"Project n picture\",\n        paragraph:\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n        buttonClassName:\"button bProject\",\n        buttonLinkTo:\"https://github.com/\"\n    },\n    {\n        Title:\"Project n\",\n        imgSrc:\"../images/PastWork/Test1.jpg\",\n        imgAlt:\"Project n picture\",\n        paragraph:\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n        buttonClassName:\"button bProject\",\n        buttonLinkTo:\"https://github.com/\"\n    },\n    {\n        Title:\"Project n\",\n        imgSrc:\"../images/PastWork/Test1.jpg\",\n        imgAlt:\"Project n picture\",\n        paragraph:\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n        buttonClassName:\"button bProject\",\n        buttonLinkTo:\"https://github.com/\"\n    },\n    {\n        Title:\"Project n\",\n        imgSrc:\"../images/PastWork/Test1.jpg\",\n        imgAlt:\"Project n picture\",\n        paragraph:\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n        buttonClassName:\"button bProject\",\n        buttonLinkTo:\"https://github.com/\"\n    }\n\n\n]\n\n\nexport default WorkList\n","import React from 'react';\nimport Header from '../../Header/Header';\nimport Footer from '../../Footer/Footer';\nimport WorkContainer from '../PastWork/WorkContainer/WorkContainer';\nimport AboutContent from '../About/AboutContent/AboutContent';\nimport WorkList from '../PastWork/WorkList';\nimport './Home.css';\n\nvar arr = []\n\nclass Home extends React.Component {\n    constructor(){\n        super();\n\n        arr=[];\n\n        while (arr.length < 6){\n            var r = Math.floor(Math.random() * WorkList.length);\n            if (arr.indexOf(r) === -1) arr.push(r);\n        }\n\n        for (var i = 0; i < arr.length; i++){\n            arr[i] = WorkList[arr[i]];\n        }\n    }\n    render(){\n        return (\n            <div>\n                <Header></Header>\n                    <div className=\"mainContainer\">\n                            <AboutContent\n                                type = \"Button\"\n                                sideKey='-1'\n                                Title=\"About me\"\n                                imgSrc=\"../images/AboutMePicture.jpg\"\n                                imgAlt=\"Malcolm Baatjies\"\n                                paragraph={[\"My name is Malcolm Baatjies. I am currently in my third year at The University of Cape Town studying a Bachelors in Science majoring in Computer Science and Computer Engineering. I have had a passion for Computers for most of my life. Some of my earliest memories include me exploring our family shared computer. From browsing around the operating system to exploring and trying to understand Excel games. This curiousity has followed me to this day. I am constantly trying to learn to new things and understand how more complex systems work.\", \"\\nI have experimented with many different programming languages including Python, Java, C++, and JavaScript and I am eager to keep expanding this list. Currently my personal interest is in web design and specifically React. I plan on pursuing an Honours degree in 2022 however future personal projects include new websites and mobile applications.\", \"\\nI am a very results driven person and I pride myself on going above and beyond the expectations of the project. I work well in a team and can often take charge and delegate responsibilities but also know when to step back and follow someone elses lead. I respect authority very well, but will also speak my mind and present my own ideas if the moment calls for it. To see more about my education and aspirations click the button below to navigate to the about tab\"]}\n                                buttonClassName=\"button bAboutContainer\"\n                                buttonLinkTo=\"/About\"\n                                buttonType=\"Navigation\"\n                                buttonValue=\"More about me!\"\n                            ></AboutContent>\n                            <div className=\"PastWorkContainer\">\n                                <h3>Some of my past work</h3>\n                                    {arr.map((wl, key) => (\n                                        <WorkContainer\n                                            key={key}\n                                            type=\"mainWork\"\n                                            sideKey={key}\n                                            Title={wl.Title}\n                                            imgSrc={wl.imgSrc}\n                                            imgAlt={wl.imgAlt}\n                                            paragraph={wl.paragraph}\n                                            buttonClassName={wl.buttonClassName}\n                                            buttonLinkTo={wl.buttonLinkTo}\n                                        ></WorkContainer>\n                                    ))}\n                            </div>\n                    </div>\n                <Footer></Footer>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","const AboutInfo =[\n    {\n        type:\"Text\",\n        Title:\"Who am I?\",\n        imgSrc:null,\n        imgAlt:null,\n        paragraph:[\"I am 20 years old and I currently reside in Cape Town, South Africa. I am no stranger to moving to new areas though. Throughout my 20 years I have moved all around South Africa and have learned an extensive amount about the difference in people and cultures in different cities. I am orginally from De Aar, which is a small town in the Northern Cape. I was born in De Aar on the 1st of November 2000 and have since moved to Bloemfontein, Johannesburg and now Cape Town.\", \"\\nAlthough moving this much was not the most enjoyable experience as a child, it did teach me to adapt to new environments very quickly and I also met a lot of interesting people along the way. I had to learn from a very young age how to socialise with new people and gain their respect. Because of these experiences, I can now easily and comfortable network with new people and find common interest and potentially gain a business contact\"],\n    },\n    {\n        type:\"Card\",\n        Title:\"Education\",\n        paragraph:[\"I have attended many of the top schools in South Africa as shown below.\", \"\\nI matriculated from Rondebosch Boys's High School in 2018 and started my first year at the University of Cape Town as an undergraduate student in the Department of Science in 2019. I am planning on graduating with a Bachelors degree in Science majoring in Computer Science and Computer Engineering at the end of 2021, thereafter I plan on pursuing and Honours degree in Computer Science\"],\n        cards:[\n            {\n                type:\"Picture\",\n                Title:\"Rondebosch Boys' High School\",\n                subTitle:\"April 2016 - November 2018\",\n                imgSrc:\"../images/About/RBHS.png\",\n                imgAlt:\"RBHS Logo\",\n                paragraph:[\"\"]\n            },\n            {\n                type:\"Picture\",\n                Title:\"King Edward VII School\",\n                subTitle:\"February 2013 - March 2016\",\n                imgSrc:\"../images/About/KES.png\",\n                imgAlt:\"KES Logo\",\n                paragraph:[\"\",]\n            },\n            {\n                type:\"Picture\",\n                Title:\"Grey College\",\n                subTitle:\"February 2009 - November 2012\",\n                imgSrc:\"../images/About/Grey.png\",\n                imgAlt:\"Grey College Logo\",\n                paragraph:[\"\"]\n            },\n            {\n                type:\"Empty\",\n                Title:\"\",\n                subTitle:\"\",\n                imgSrc:null,\n                imgAlt:null,\n                paragraph:[\"\"]\n            },\n            {\n                type:\"Picture\",\n                Title:\"University Of Cape Town\",\n                subTitle:\"February 2019 - Present\",\n                imgSrc:\"../images/About/UCT.png\",\n                imgAlt:\"UCT Logo\",\n                paragraph:[\"\"]\n            },\n            {\n                type:\"Empty\",\n                Title:\"\",\n                subTitle:\"\",\n                imgSrc:null,\n                imgAlt:null,\n                paragraph:[\"\"]\n            },\n        ]\n    },\n    {\n        type:\"Card\",\n        Title:\"Experience\",\n        paragraph:[\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"],\n        cards:[\n            {\n                type:\"Text\",\n                Title:\"Private Tutor\",\n                subTitle:\"January 2020 - Present\",\n                imgSrc:null,\n                imgAlt:null,\n                paragraph:[\"I have been tutoring privately for about 2 years. I mainly tutor high school IT but I can also offer tutoring for University level Computer Science courses.\", \"\\nIf you are interested in receiving tutoring from me please get in contact\"]\n            },\n            {\n                type:\"Text\",\n                Title:\"Computer Science Tutor - CSC1015F\",\n                subTitle:\"February 2020 - June 2020\",\n                imgSrc:null,\n                imgAlt:null,\n                paragraph:[\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",]\n            },\n            {\n                type:\"Text\",\n                Title:\"Computer Science Tutor - CSC1016S\",\n                subTitle:\"July 2020 - November 2020\",\n                imgSrc:null,\n                imgAlt:null,\n                paragraph:[\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",]\n            },\n            {\n                type:\"Text\",\n                Title:\"Other things\",\n                imgSrc:null,\n                imgAlt:null,\n                paragraph:[\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",]\n            },\n            {\n                type:\"Text\",\n                Title:\"Other things\",\n                imgSrc:null,\n                imgAlt:null,\n                paragraph:[\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",]\n            },\n            {\n                type:\"Text\",\n                Title:\"Other things\",\n                imgSrc:null,\n                imgAlt:null,\n                paragraph:[\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",]\n            },\n            {\n                type:\"Text\",\n                Title:\"Other things\",\n                imgSrc:null,\n                imgAlt:null,\n                paragraph:[\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",]\n            },\n            {\n                type:\"Text\",\n                Title:\"Other things\",\n                imgSrc:null,\n                imgAlt:null,\n                paragraph:[\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",]\n            },\n        ]\n    },\n]\n\nexport default AboutInfo;\n","import React from 'react';\nimport Header from '../../Header/Header';\nimport Footer from '../../Footer/Footer';\nimport AboutContent from './AboutContent/AboutContent';\nimport AboutInfo from './AboutInfo';\nimport \"./About.css\";\n\nclass About extends React.Component {\n    render(){\n        return (\n            <div>\n                <Header></Header>\n                    <div className=\"aboutContainer\">\n                        {AboutInfo.map((ai, key) => (\n                            <AboutContent\n                                key={key}\n                                type={ai.type}\n                                sideKey={key}\n                                Title={ai.Title}\n                                imgSrc={ai.imgSrc}\n                                imgAlt={ai.imgAlt}\n                                paragraph={ai.paragraph}\n                                cards={ai.cards}\n                            ></AboutContent>\n                        ))}\n                    </div>\n                <Footer></Footer>\n            </div>\n        );\n    }\n}\n\nexport default About;\n","import React from 'react';\nimport Header from '../../Header/Header';\nimport Footer from '../../Footer/Footer';\nimport WorkList from './WorkList';\nimport WorkContainer from './WorkContainer/WorkContainer';\n\nclass PastWork extends React.Component {\n    render(){\n        return (\n            <div>\n                <Header></Header>\n                <div className=\"mainBody\">\n                    <div className=\"mainContainer\">\n                            {WorkList.map((wl, key) => (\n                                <WorkContainer\n                                    key={key}\n                                    type=\"PastWork\"\n                                    sideKey={key}\n                                    Title={wl.Title}\n                                    imgSrc={wl.imgSrc}\n                                    imgAlt={wl.imgAlt}\n                                    paragraph={wl.paragraph}\n                                    buttonClassName={wl.buttonClassName}\n                                    buttonLinkTo={wl.buttonLinkTo}\n                                ></WorkContainer>\n                            ))}\n                    </div>\n                </div>\n                <Footer></Footer>\n            </div>\n        );\n    }\n}\n\nexport default PastWork;\n","import React from 'react';\nimport Header from '../../Header/Header';\nimport Footer from '../../Footer/Footer';\nimport TextField from  '@material-ui/core/TextField';\nimport Button from '../../Button/Button';\nimport \"./ContactMe.css\";\nimport * as emailjs from 'emailjs-com';\n\nvar validator = require(\"email-validator\");\nconst nameErrorConst = \"Please enter your full name\";\nconst emailErrorConst = \"Invalid email address\"\nconst messageErrorConst = \"Please enter a message\";\n\nclass ContactMe extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            name: \"-1\",\n            nameError: \"\",\n            email:\"default@default.com\",\n            emailError:\"\",\n            message: \"-1\",\n            messageError:\"\",\n            defaultName: \"\",\n            defaultEmail:\"\",\n            defaultMessage:\"\"\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.resetForm = this.resetForm.bind(this);\n    }\n\n    handleSubmit(event) {\n        document.activeElement.blur();\n        if ((this.state.name !==\"\" && this.state.name !==\"-1\") &&\n        (validator.validate(this.state.email) && (this.state.email !==\"default@default.com\")) &&\n        (this.state.message !==\"\" && this.state.message !==\"-1\")){\n            event.preventDefault();\n            const { name, email, message } = this.state;\n            const templateParams = {\n              from_name: name,\n              from_email: email,\n              to_name: 'Malcolm Baatjies',\n              message_html: message,\n            };\n            emailjs.send(\n                'service_x3cxr0m',\n                'template_7y5fvdu',\n                templateParams,\n                'user_NigdOEjlWhj5f3Jjv5Vw3'\n            )\n            this.resetForm();\n        }\n        else {\n            if (this.state.name ===\"-1\"){\n                this.setState({\n                    name:\"\",\n                    nameError:nameErrorConst\n                })\n            }\n            if (this.state.message ===\"-1\"){\n                this.setState({\n                    message:\"\",\n                    messageError:messageErrorConst\n                })\n            }\n            if (this.state.email === \"default@default.com\"){\n                this.setState({\n                    email:\"\",\n                    emailError:emailErrorConst\n                })\n            }\n            if (this.state.name ===\"\" || this.state.name ===\"-1\"){\n                this.nameField.focus();\n            }\n            else if (!validator.validate(this.state.email) || this.state.email ===\"default@default.com\"){\n                this.emailField.focus();\n            }\n            else if (this.state.message ===\"\" || this.state.message ===\"-1\"){\n                this.messageField.focus();\n            }\n        }\n    };\n\n  resetForm() {\n    this.setState({\n        name: \"-1\",\n        nameError: \"\",\n        email:\"default@default.com\",\n        emailError:\"\",\n        message: \"-1\",\n        messageError:\"\",\n        defaultName: \"\",\n        defaultEmail:\"\",\n        defaultMessage:\"\"\n    });\n  }\n\n    render(){\n        return (\n            <div>\n                <Header></Header>\n                <div className=\"mainContactContainer\">\n                    <div className=\"contactContainer\">\n                        <h2 className=\"contactHeader\">Please enter your details and message below</h2>\n                        <form onSubmit={this.handleSubmit}>\n                            <TextField\n                                inputProps={{style:{fontSize:\"var(--inputFontSize)\"}}}\n                                InputLabelProps={{style:{fontSize:\"var(--inputFontSize)\"}}}\n                                inputRef={nameField => (this.nameField = nameField)}\n                                value={this.state.defaultName}\n                                label=\"Full Name\"\n                                fullWidth\n                                autoComplete=\"none\"\n                                onChange={(e) => {\n                                    if (e.target.value === \"\"){\n                                        this.setState({name:e.target.value, nameError:nameErrorConst, defaultName:e.target.value})\n                                    }\n                                    else{\n                                        this.setState({name:e.target.value, defaultName:e.target.value, nameError:\"\"})\n                                    }\n                                }}\n                                error={this.state.name === \"\"}\n                                helperText={this.state.nameError}\n                            />\n                        <TextField\n                            inputProps={{style:{fontSize:\"var(--inputFontSize)\"}}}\n                            InputLabelProps={{style:{fontSize:\"var(--inputFontSize)\"}}}\n                            inputRef={emailField => (this.emailField = emailField)}\n                            type={\"email\"}\n                            value={this.state.defaultEmail}\n                            label=\"Email\"\n                            fullWidth\n                            autoComplete=\"none\"\n                            onChange={(e) => {\n                                this.setState({defaultEmail:e.target.value})\n                            }}\n                            onBlur={(e) => {\n                                if (!validator.validate(e.target.value)){\n                                    this.setState({email:e.target.value, emailError:emailErrorConst, defaultEmail:e.target.value})\n                                }\n                                else{\n                                    this.setState({email:e.target.value, defaultEmail:e.target.value, emailError:\"\"})\n                                }\n                            }}\n                            error={!validator.validate(this.state.email)}\n                            helperText={this.state.emailError}\n                            />\n                        <TextField\n                            inputProps={{style:{fontSize:\"var(--inputFontSize)\", lineHeight:\"var(--inputFontSize)\"}}}\n                            InputLabelProps={{style:{fontSize:\"var(--inputFontSize)\"}}}\n                            inputRef={messageField => (this.messageField = messageField)}\n                            className=\"messageField\"\n                            value={this.state.defaultMessage}\n                            label=\"Message\"\n                            spellCheck\n                            fullWidth\n                            multiline\n                            rows={8}\n                            autoComplete=\"none\"\n                            onChange={(e) => {\n                                if (e.target.value === \"\"){\n                                    this.setState({message:e.target.value, messageError:messageErrorConst, defaultMessage:e.target.value})\n                                }\n                                else{\n                                    this.setState({message:e.target.value, defaultMessage:e.target.value, messageError:\"\"})\n                                }\n                            }}\n                            error={this.state.message === \"\"}\n                            helperText={this.state.messageError}\n                            />\n                        <Button\n                            type=\"Submit\"\n                            className=\"button bSubmit\"\n                            value=\"Submit\"\n                            onClick={this.handleSubmit}\n                        ></Button>\n                        </form>\n                    </div>\n                </div>\n                <Footer></Footer>\n            </div>\n        );\n    }\n}\n\nexport default ContactMe;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scroll(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React, {Component} from 'react';\nimport {HashRouter as Router,\n        Route,\n        Switch} from 'react-router-dom';\nimport './App.css';\nimport LoadingScreen from './components/Pages/LoadingScreen/LoadingScreen';\nimport Home from './components/Pages/Home/Home';\nimport About from './components/Pages/About/About';\nimport PastWork from \"./components/Pages/PastWork/PastWork\";\nimport ContactMe from \"./components/Pages/ContactMe/ContactMe\";\nimport ScrollToTop from \"./scrollToTop\";\n\nclass App extends Component {\n    render(){\n        return (\n            <Router basename={\"/\"}>\n                <ScrollToTop/>\n                <React.Fragment>\n                    <Switch>\n                        <LoadingScreen path= \"/\" exact component={LoadingScreen}/>\n                        <Route path= \"/Home\" exact component={Home}/>\n                        <Route path= \"/About\" exact component={About}/>\n                        <Route path= \"/Past-work\" exact component={PastWork}/>\n                        <Route path= \"/Contact-me\" exact component={ContactMe}/>\n                    </Switch>\n                </React.Fragment>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}